################################################################################
#                                                                              #
#      IAR Universal Linker V5.0.2.5/W32                                       #
#                                                                              #
#           Link time     =  20/Feb/2017  16:58:21                             #
#           Target CPU    =  MSP430                                            #
#           List file     =  "C:\Users\Raúl\Desktop\Projecte\Tot funciona bé\e #
#                            Z430-RF2500 Wireless Sensor Monitor - timer\Embed #
#                            ded\IAR\CC2500 Sensor Demo-End Device\List\Sensor #
#                            _Demo_AP_as_Data_Hub.map"                         #
#           Output file 1 =  "C:\Users\Raúl\Desktop\Projecte\Tot funciona bé\e #
#                            Z430-RF2500 Wireless Sensor Monitor - timer\Embed #
#                            ded\IAR\CC2500 Sensor Demo-End Device\Exe\Sensor_ #
#                            Demo_AP_as_Data_Hub.d43"                          #
#                            Format: debug                                     #
#                            UBROF version 10.0.3                              #
#                            Using library modules for C-SPY (-rt)             #
#           Command line  =  "C:\Users\Raúl\Desktop\Projecte\Tot funciona bé\e #
#                            Z430-RF2500 Wireless Sensor Monitor - timer\Embed #
#                            ded\IAR\CC2500 Sensor Demo-End Device\Obj\bsp.r43 #
#                            "                                                 #
#                            "C:\Users\Raúl\Desktop\Projecte\Tot funciona bé\e #
#                            Z430-RF2500 Wireless Sensor Monitor - timer\Embed #
#                            ded\IAR\CC2500 Sensor Demo-End Device\Obj\main_ED #
#                            .r43"                                             #
#                            "C:\Users\Raúl\Desktop\Projecte\Tot funciona bé\e #
#                            Z430-RF2500 Wireless Sensor Monitor - timer\Embed #
#                            ded\IAR\CC2500 Sensor Demo-End Device\Obj\mrfi.r4 #
#                            3"                                                #
#                            "C:\Users\Raúl\Desktop\Projecte\Tot funciona bé\e #
#                            Z430-RF2500 Wireless Sensor Monitor - timer\Embed #
#                            ded\IAR\CC2500 Sensor Demo-End Device\Obj\nwk.r43 #
#                            "                                                 #
#                            "C:\Users\Raúl\Desktop\Projecte\Tot funciona bé\e #
#                            Z430-RF2500 Wireless Sensor Monitor - timer\Embed #
#                            ded\IAR\CC2500 Sensor Demo-End Device\Obj\nwk_QMg #
#                            mt.r43"                                           #
#                            "C:\Users\Raúl\Desktop\Projecte\Tot funciona bé\e #
#                            Z430-RF2500 Wireless Sensor Monitor - timer\Embed #
#                            ded\IAR\CC2500 Sensor Demo-End Device\Obj\nwk_api #
#                            .r43"                                             #
#                            "C:\Users\Raúl\Desktop\Projecte\Tot funciona bé\e #
#                            Z430-RF2500 Wireless Sensor Monitor - timer\Embed #
#                            ded\IAR\CC2500 Sensor Demo-End Device\Obj\nwk_fra #
#                            me.r43"                                           #
#                            "C:\Users\Raúl\Desktop\Projecte\Tot funciona bé\e #
#                            Z430-RF2500 Wireless Sensor Monitor - timer\Embed #
#                            ded\IAR\CC2500 Sensor Demo-End Device\Obj\nwk_fre #
#                            q.r43"                                            #
#                            "C:\Users\Raúl\Desktop\Projecte\Tot funciona bé\e #
#                            Z430-RF2500 Wireless Sensor Monitor - timer\Embed #
#                            ded\IAR\CC2500 Sensor Demo-End Device\Obj\nwk_glo #
#                            bals.r43"                                         #
#                            "C:\Users\Raúl\Desktop\Projecte\Tot funciona bé\e #
#                            Z430-RF2500 Wireless Sensor Monitor - timer\Embed #
#                            ded\IAR\CC2500 Sensor Demo-End Device\Obj\nwk_ioc #
#                            tl.r43"                                           #
#                            "C:\Users\Raúl\Desktop\Projecte\Tot funciona bé\e #
#                            Z430-RF2500 Wireless Sensor Monitor - timer\Embed #
#                            ded\IAR\CC2500 Sensor Demo-End Device\Obj\nwk_joi #
#                            n.r43"                                            #
#                            "C:\Users\Raúl\Desktop\Projecte\Tot funciona bé\e #
#                            Z430-RF2500 Wireless Sensor Monitor - timer\Embed #
#                            ded\IAR\CC2500 Sensor Demo-End Device\Obj\nwk_lin #
#                            k.r43"                                            #
#                            "C:\Users\Raúl\Desktop\Projecte\Tot funciona bé\e #
#                            Z430-RF2500 Wireless Sensor Monitor - timer\Embed #
#                            ded\IAR\CC2500 Sensor Demo-End Device\Obj\nwk_mgm #
#                            t.r43"                                            #
#                            "C:\Users\Raúl\Desktop\Projecte\Tot funciona bé\e #
#                            Z430-RF2500 Wireless Sensor Monitor - timer\Embed #
#                            ded\IAR\CC2500 Sensor Demo-End Device\Obj\nwk_pin #
#                            g.r43"                                            #
#                            "C:\Users\Raúl\Desktop\Projecte\Tot funciona bé\e #
#                            Z430-RF2500 Wireless Sensor Monitor - timer\Embed #
#                            ded\IAR\CC2500 Sensor Demo-End Device\Obj\nwk_sec #
#                            urity.r43"                                        #
#                            "C:\Users\Raúl\Desktop\Projecte\Tot funciona bé\e #
#                            Z430-RF2500 Wireless Sensor Monitor - timer\Embed #
#                            ded\IAR\CC2500 Sensor Demo-End Device\Obj\virtual #
#                            _com_cmds.r43"                                    #
#                            "C:\Users\Raúl\Desktop\Projecte\Tot funciona bé\e #
#                            Z430-RF2500 Wireless Sensor Monitor - timer\Embed #
#                            ded\IAR\CC2500 Sensor Demo-End Device\Obj\vlo_ran #
#                            d.r43"                                            #
#                            -o                                                #
#                            "C:\Users\Raúl\Desktop\Projecte\Tot funciona bé\e #
#                            Z430-RF2500 Wireless Sensor Monitor - timer\Embed #
#                            ded\IAR\CC2500 Sensor Demo-End Device\Exe\Sensor_ #
#                            Demo_AP_as_Data_Hub.d43"                          #
#                            -l                                                #
#                            "C:\Users\Raúl\Desktop\Projecte\Tot funciona bé\e #
#                            Z430-RF2500 Wireless Sensor Monitor - timer\Embed #
#                            ded\IAR\CC2500 Sensor Demo-End Device\List\Sensor #
#                            _Demo_AP_as_Data_Hub.map"                         #
#                            -xmsnio                                           #
#                            "-IC:\Program Files (x86)\IAR Systems\Embedded Wo #
#                            rkbench 6.0\430\LIB\"                             #
#                            -f                                                #
#                            "C:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench 6.0\430\CONFIG\lnk430F2274.xcl"             #
#                            (-cmsp430 -QCODE_I=CODE_ID                        #
#                            -Z(DATA)DATA16_I,DATA16_Z,DATA16_N,DATA16_HEAP+_D #
#                            ATA16_HEAP_SIZE=0200-05FF                         #
#                            -Z(DATA)CODE_I -Z(DATA)CSTACK+_STACK_SIZE#        #
#                            -Z(CONST)INFO=1000-10FF                           #
#                            -Z(CONST)INFOA=10C0-10FF                          #
#                            -Z(CONST)INFOB=1080-10BF                          #
#                            -Z(CONST)INFOC=1040-107F                          #
#                            -Z(CONST)INFOD=1000-103F                          #
#                            -Z(CONST)DATA16_C,DATA16_ID,DIFUNCT,CHECKSUM=8000 #
#                            -FFDF                                             #
#                            -Z(CODE)CSTART,ISR_CODE,CODE_ID=8000-FFDF         #
#                            -P(CODE)CODE=8000-FFDF -Z(CODE)INTVEC=FFE0-FFFF   #
#                            -Z(CODE)RESET=FFFE-FFFF) -D_STACK_SIZE=C8 -rt     #
#                            "C:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench 6.0\430\LIB\CLIB\cl430f.r43"                #
#                            -D_DATA16_HEAP_SIZE=0 -s __program_start          #
#                            -D_DATA20_HEAP_SIZE=50                            #
#                                                                              #
#                           Copyright (C) 1987-2010 IAR Systems AB.            #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at :           808A  Relocatable, from module : ?cstart




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  __SystemLibrary = CLib
  __core          = 430
  __double_size   = 32
  __pic           = no
  __reg_r4        = free
  __reg_r5        = free
  __rt_version    = 3



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _DATA20_HEAP_SIZE       0050 
           _DATA16_HEAP_SIZE       0000 
           _STACK_SIZE             00C8 
    *************************************************************************

  FILE NAME : C:\Users\Raúl\Desktop\Projecte\Tot funciona bé\eZ430-RF2500 Wireless Sensor Monitor - timer\Embedded\IAR\CC2500 Sensor Demo-End Device\Obj\bsp.r43
  PROGRAM MODULE, NAME : bsp

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0056 - 0056 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   BSP_InitBoard
                                                   createRandomAddress (main_ED)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DCOCTL                  0056 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0057 - 0057 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   BSP_InitBoard
                                                   createRandomAddress (main_ED)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BCSCTL1                 0057 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0021 - 0021 (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   BSP_InitButtons
                                                   BSP_InitLeds
                                                   linkTo (main_ED)
                                                   main (main_ED)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1OUT                   0021 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0022 - 0022 (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   BSP_InitLeds
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1DIR                   0022 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0027 - 0027 (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   BSP_InitButtons
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1REN                   0027 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0160 - 0161 (0x2 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   BSP_InitBoard
                                                   main (main_ED)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TACTL                   0160 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0120 - 0121 (0x2 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   __low_level_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WDTCTL                  0120 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 10FC - 10FC (0x1 bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   BSP_InitBoard
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CALDCO_8MHZ             10FC 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 10FD - 10FD (0x1 bytes), align: 0
  Segment part 9. ROOT.       Intra module refs:   BSP_InitBoard
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CALBC1_8MHZ             10FD 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9E5C - 9E73 (0x18 bytes), align: 1
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BSP_Init                9E5C            main (main_ED)
               calls direct
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 0240 - 0240 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   BSP_Delay
                                                   BSP_InitBoard
           LOCAL                   ADDRESS         
           =====                   =======         
           sIterationsPerUsec      0240 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A03E - A047 (0xa bytes), align: 1
  Segment part 17. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init        A03E            ?cstart_call_low_level_init (?cstart)
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9D5C - 9D7B (0x20 bytes), align: 1
  Segment part 16.            Intra module refs:   BSP_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BSP_InitBoard           9D5C 
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9CF8 - 9D19 (0x22 bytes), align: 1
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BSP_Delay               9CF8            ?Subroutine9 (mrfi)
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BSP_InitDrivers         
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F0A - 9F1B (0x12 bytes), align: 1
  Segment part 13.            Intra module refs:   BSP_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BSP_InitLeds            9F0A 
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A00C - A015 (0xa bytes), align: 1
  Segment part 12.            Intra module refs:   BSP_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BSP_InitButtons         A00C 
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r4         
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r5         

    *************************************************************************

  FILE NAME : C:\Users\Raúl\Desktop\Projecte\Tot funciona bé\eZ430-RF2500 Wireless Sensor Monitor - timer\Embedded\IAR\CC2500 Sensor Demo-End Device\Obj\main_ED.r43
  PROGRAM MODULE, NAME : main_ED

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 004A - 004A (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   linkTo
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADC10AE0                004A 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 01B0 - 01B1 (0x2 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   linkTo
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADC10CTL0               01B0 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 01B2 - 01B3 (0x2 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   linkTo
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADC10CTL1               01B2 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 01B4 - 01B5 (0x2 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   linkTo
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADC10MEM                01B4 
    -------------------------------------------------------------------------
DATA16_AN
  Segment part 5. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DCOCTL                  
    -------------------------------------------------------------------------
DATA16_AN
  Segment part 6. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BCSCTL1                 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0053 - 0053 (0x1 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BCSCTL3                 0053 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0128 - 0129 (0x2 bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   createRandomAddress
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FCTL1                   0128 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 012A - 012B (0x2 bytes), align: 0
  Segment part 9. ROOT.       Intra module refs:   createRandomAddress
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FCTL2                   012A 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 012C - 012D (0x2 bytes), align: 0
  Segment part 10. ROOT.      Intra module refs:   createRandomAddress
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FCTL3                   012C 
    -------------------------------------------------------------------------
DATA16_AN
  Segment part 11. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1OUT                   
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 002A - 002A (0x1 bytes), align: 0
  Segment part 12. ROOT.      Intra module refs:   linkTo
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2DIR                   002A 
    -------------------------------------------------------------------------
DATA16_AN
  Segment part 13. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TACTL                   
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0162 - 0163 (0x2 bytes), align: 0
  Segment part 14. ROOT.      Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TACCTL0                 0162 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0172 - 0173 (0x2 bytes), align: 0
  Segment part 15. ROOT.      Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TACCR0                  0172 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 10FE - 10FE (0x1 bytes), align: 0
  Segment part 16. ROOT.      Intra module refs:   createRandomAddress
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CALDCO_1MHZ             10FE 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 10FF - 10FF (0x1 bytes), align: 0
  Segment part 17. ROOT.      Intra module refs:   createRandomAddress
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CALBC1_1MHZ             10FF 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 0241 - 0241 (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   linkTo
           LOCAL                   ADDRESS         
           =====                   =======         
           sLinkID1                0241 
    -------------------------------------------------------------------------
DATA16_I
  Segment part 22. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tempOffset              
    -------------------------------------------------------------------------
DATA16_I
  Relative segment, address: 0200 - 0201 (0x2 bytes), align: 1
  Segment part 24.            Intra module refs:   createRandomAddress
                                                   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Flash_Addr              0200 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 0242 - 0242 (0x1 bytes), align: 0
  Segment part 26.            Intra module refs:   Timer_A
                                                   linkTo
           LOCAL                   ADDRESS         
           =====                   =======         
           sSelfMeasureSem         0242 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9556 - 95D7 (0x82 bytes), align: 1
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    9556            Segment part 14 (?cstart)
               calls direct
               CSTACK = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9FB8 - 9FC5 (0xe bytes), align: 1
  Segment part 39.            Intra module refs:   linkTo
                                                   main
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            9FB8 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8B34 - 8C4B (0x118 bytes), align: 1
  Segment part 30.            Intra module refs:   main
           LOCAL                   ADDRESS         
           =====                   =======         
           linkTo                  8B34 
               calls direct
               CSTACK = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F40 - 9F4F (0x10 bytes), align: 1
  Segment part 31.            Intra module refs:   linkTo
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            9F40 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9FC6 - 9FD1 (0xc bytes), align: 1
  Segment part 32.            Intra module refs:   linkTo
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            9FC6 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A050 - A055 (0x6 bytes), align: 1
  Segment part 33.            Intra module refs:   linkTo
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            A050 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F80 - 9F8D (0xe bytes), align: 1
  Segment part 34.            Intra module refs:   ?Subroutine0
                                                   ?Subroutine2
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            9F80 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A020 - A029 (0xa bytes), align: 1
  Segment part 35.            Intra module refs:   ?Subroutine0
                                                   ?Subroutine6
                                                   linkTo
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            A020 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F60 - 9F6F (0x10 bytes), align: 1
  Segment part 36.            Intra module refs:   linkTo
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            9F60 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 984E - 9899 (0x4c bytes), align: 1
  Segment part 37.            Intra module refs:   linkTo
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            984E 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 96D2 - 973F (0x6e bytes), align: 1
  Segment part 29.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           createRandomAddress     96D2 
               calls direct
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A048 - A04F (0x8 bytes), align: 1
  Segment part 28.            Intra module refs:   ADC10_ISR::??INTVEC 10
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADC10_ISR               A048 
               interrupt function
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9FD2 - 9FDD (0xc bytes), align: 1
  Segment part 27.            Intra module refs:   Timer_A::??INTVEC 18
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Timer_A                 9FD2 
               interrupt function
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FFE0 - FFEB (0xc bytes), align: 1
  Segment part 18. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADC10_ISR::??INTVEC 10
                                   FFEA 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FFE0 - FFF3 (0x14 bytes), align: 1
  Segment part 19. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Timer_A::??INTVEC 18    FFF2 
    -------------------------------------------------------------------------
CSTACK
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
DATA16_ID
  Segment part 23. NOT NEEDED.
    -------------------------------------------------------------------------
DATA16_ID
  Relative segment, address: 805C - 805D (0x2 bytes), align: 1
  Segment part 25.            Intra module refs:   Flash_Addr
    -------------------------------------------------------------------------
CODE
  Segment part 40. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r4         
    -------------------------------------------------------------------------
CODE
  Segment part 41. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r5         

    *************************************************************************

  FILE NAME : C:\Users\Raúl\Desktop\Projecte\Tot funciona bé\eZ430-RF2500 Wireless Sensor Monitor - timer\Embedded\IAR\CC2500 Sensor Demo-End Device\Obj\mrfi.r43
  PROGRAM MODULE, NAME : mrfi

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0003 - 0003 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   MRFI_Init
                                                   mrfiSpiCmdStrobe
                                                   spiBurstFifoAccess
                                                   spiRegAccess
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IFG2                    0003 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0028 - 0028 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   MRFI_Transmit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2IN                    0028 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 002B - 002B (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   MRFI_GpioIsr
                                                   MRFI_Init
                                                   MRFI_Transmit
                                                   Mrfi_RxModeOff
                                                   Mrfi_RxModeOn
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2IFG                   002B 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 002C - 002C (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   MRFI_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2IES                   002C 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 002D - 002D (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   MRFI_GpioIsr
                                                   Mrfi_RxModeOff
                                                   Mrfi_RxModeOn
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2IE                    002D 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 002E - 002E (0x1 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   MRFI_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2SEL                   002E 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0018 - 0018 (0x1 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   MRFI_Init
                                                   MRFI_WakeUp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P3IN                    0018 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0019 - 0019 (0x1 bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   MRFI_Init
                                                   MRFI_WakeUp
                                                   mrfiSpiCmdStrobe
                                                   mrfiSpiInit
                                                   spiBurstFifoAccess
                                                   spiRegAccess
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P3OUT                   0019 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 001A - 001A (0x1 bytes), align: 0
  Segment part 9. ROOT.       Intra module refs:   mrfiSpiInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P3DIR                   001A 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 001B - 001B (0x1 bytes), align: 0
  Segment part 10. ROOT.      Intra module refs:   mrfiSpiInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P3SEL                   001B 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0068 - 0068 (0x1 bytes), align: 0
  Segment part 11. ROOT.      Intra module refs:   mrfiSpiCmdStrobe
                                                   mrfiSpiInit
                                                   spiBurstFifoAccess
                                                   spiRegAccess
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCB0CTL0                0068 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0069 - 0069 (0x1 bytes), align: 0
  Segment part 12. ROOT.      Intra module refs:   mrfiSpiInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCB0CTL1                0069 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 006A - 006A (0x1 bytes), align: 0
  Segment part 13. ROOT.      Intra module refs:   mrfiSpiInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCB0BR0                 006A 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 006B - 006B (0x1 bytes), align: 0
  Segment part 14. ROOT.      Intra module refs:   mrfiSpiInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCB0BR1                 006B 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 006E - 006E (0x1 bytes), align: 0
  Segment part 15. ROOT.      Intra module refs:   mrfiSpiCmdStrobe
                                                   spiBurstFifoAccess
                                                   spiRegAccess
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCB0RXBUF               006E 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 006F - 006F (0x1 bytes), align: 0
  Segment part 16. ROOT.      Intra module refs:   MRFI_Init
                                                   mrfiSpiCmdStrobe
                                                   spiBurstFifoAccess
                                                   spiRegAccess
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCB0TXBUF               006F 
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 800C - 8047 (0x3c bytes), align: 0
  Segment part 19.            Intra module refs:   MRFI_Init
           LOCAL                   ADDRESS         
           =====                   =======         
           mrfiRadioCfg            800C 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 0243 - 0243 (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   ?Subroutine13
                                                   ?Subroutine3
                                                   ?Subroutine6
                                                   MRFI_GetRadioState
                                                   MRFI_Init
                                                   MRFI_RxIdle
                                                   MRFI_RxOn
                                                   MRFI_Sleep
                                                   MRFI_Transmit
                                                   MRFI_WakeUp
           LOCAL                   ADDRESS         
           =====                   =======         
           mrfiRadioState          0243 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 0244 - 025B (0x18 bytes), align: 0
  Segment part 21.            Intra module refs:   MRFI_Init
                                                   MRFI_Receive
                                                   Mrfi_SyncPinRxIsr
                                                   Segment part 50
           LOCAL                   ADDRESS         
           =====                   =======         
           mrfiIncomingPacket      0244 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 025C - 025C (0x1 bytes), align: 0
  Segment part 22.            Intra module refs:   MRFI_Init
                                                   MRFI_RandomByte
           LOCAL                   ADDRESS         
           =====                   =======         
           mrfiRndSeed             025C 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 025D - 025D (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   MRFI_PostKillSem
                                                   MRFI_ReplyDelay
           LOCAL                   ADDRESS         
           =====                   =======         
           sKillSem                025D 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 025E - 025E (0x1 bytes), align: 0
  Segment part 24.            Intra module refs:   MRFI_PostKillSem
                                                   MRFI_ReplyDelay
           LOCAL                   ADDRESS         
           =====                   =======         
           sReplyDelayContext      025E 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 022E - 022F (0x2 bytes), align: 1
  Segment part 25.            Intra module refs:   MRFI_Init
                                                   MRFI_ReplyDelay
           LOCAL                   ADDRESS         
           =====                   =======         
           sReplyDelayScalar       022E 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 0230 - 0231 (0x2 bytes), align: 1
  Segment part 26.            Intra module refs:   MRFI_Init
                                                   MRFI_Transmit
           LOCAL                   ADDRESS         
           =====                   =======         
           sBackoffHelper          0230 
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 8048 - 804B (0x4 bytes), align: 0
  Segment part 27.            Intra module refs:   MRFI_RxAddrIsFiltered
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mrfiBroadcastAddr       8048            nwk_getBCastAddress (nwk_globals)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 804C - 804F (0x4 bytes), align: 0
  Segment part 28.            Intra module refs:   MRFI_SetLogicalChannel
           LOCAL                   ADDRESS         
           =====                   =======         
           mrfiLogicalChanTable    804C 
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 8050 - 8052 (0x3 bytes), align: 0
  Segment part 29.            Intra module refs:   MRFI_SetRFPwr
           LOCAL                   ADDRESS         
           =====                   =======         
           mrfiRFPowerTable        8050 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 025F - 025F (0x1 bytes), align: 0
  Segment part 30.            Intra module refs:   MRFI_EnableRxAddrFilter
                                                   MRFI_RxAddrIsFiltered
           LOCAL                   ADDRESS         
           =====                   =======         
           mrfiRxFilterEnabled     025F 
    -------------------------------------------------------------------------
DATA16_I
  Relative segment, address: 0202 - 0205 (0x4 bytes), align: 0
  Segment part 31.            Intra module refs:   MRFI_EnableRxAddrFilter
                                                   MRFI_RxAddrIsFiltered
                                                   MRFI_SetRxAddrFilter
           LOCAL                   ADDRESS         
           =====                   =======         
           mrfiRxFilterAddr        0202 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 80BA - 80F7 (0x3e bytes), align: 1
  Segment part 34.            Intra module refs:   Mrfi_SyncPinRxIsr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MRFI_RxAddrIsFiltered   80BA 
               CSTACK = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 80F8 - 810D (0x16 bytes), align: 1
  Segment part 35.            Intra module refs:   ?Subroutine11
                                                   MRFI_Init
                                                   MRFI_Sleep
                                                   MRFI_Transmit
                                                   Mrfi_RxModeOff
                                                   Mrfi_RxModeOn
                                                   Mrfi_SyncPinRxIsr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mrfiSpiCmdStrobe        80F8 
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 810E - 8115 (0x8 bytes), align: 1
  Segment part 36.            Intra module refs:   mrfiSpiCmdStrobe
                                                   spiRegAccess
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            810E 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8116 - 811D (0x8 bytes), align: 1
  Segment part 37.            Intra module refs:   ?Subroutine0
                                                   spiBurstFifoAccess
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 811E - 8177 (0x5a bytes), align: 1
  Segment part 38.            Intra module refs:   mrfiSpiReadRxFifo
                                                   mrfiSpiWriteTxFifo
           LOCAL                   ADDRESS         
           =====                   =======         
           spiBurstFifoAccess      811E 
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8178 - 817B (0x4 bytes), align: 1
  Segment part 39.            Intra module refs:   mrfiSpiCmdStrobe
                                                   spiBurstFifoAccess
                                                   spiRegAccess
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            8178 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 817C - 8185 (0xa bytes), align: 1
  Segment part 40.            Intra module refs:   ?Subroutine4
                                                   MRFI_Init
                                                   spiBurstFifoAccess
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine19           817C 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8186 - 818F (0xa bytes), align: 1
  Segment part 41.            Intra module refs:   Mrfi_SyncPinRxIsr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mrfiSpiReadRxFifo       8186 
               calls direct
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8190 - 81A5 (0x16 bytes), align: 1
  Segment part 42.            Intra module refs:   mrfiSpiReadReg
                                                   mrfiSpiWriteReg
           LOCAL                   ADDRESS         
           =====                   =======         
           spiRegAccess            8190 
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 81A6 - 81AD (0x8 bytes), align: 1
  Segment part 43.            Intra module refs:   ?Subroutine0
                                                   MRFI_Init
                                                   spiBurstFifoAccess
                                                   spiRegAccess
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           81A6 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 81AE - 81BB (0xe bytes), align: 1
  Segment part 44.            Intra module refs:   mrfiSpiCmdStrobe
                                                   spiRegAccess
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            81AE 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 81BC - 81CB (0x10 bytes), align: 1
  Segment part 45.            Intra module refs:   ?Subroutine8
                                                   spiBurstFifoAccess
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine18           81BC 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 81CC - 81DF (0x14 bytes), align: 1
  Segment part 46.            Intra module refs:   ?Subroutine14
                                                   MRFI_Init
                                                   MRFI_Rssi
                                                   Mrfi_SyncPinRxIsr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mrfiSpiReadReg          81CC 
               calls direct
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 81E0 - 81E9 (0xa bytes), align: 1
  Segment part 47.            Intra module refs:   ?Subroutine5
                                                   mrfiSpiCmdStrobe
                                                   mrfiSpiReadReg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           81E0 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 81EA - 82A5 (0xbc bytes), align: 1
  Segment part 48.            Intra module refs:   MRFI_GpioIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           Mrfi_SyncPinRxIsr       81EA 
               calls direct and indirect
               CSTACK = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 82A6 - 82A9 (0x4 bytes), align: 1
  Segment part 49.            Intra module refs:   MRFI_Init
                                                   Mrfi_SyncPinRxIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           82A6 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 82AA - 82B3 (0xa bytes), align: 1
  Segment part 50.            Intra module refs:   ?Subroutine15
                                                   MRFI_Init
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 82B4 - 82CD (0x1a bytes), align: 1
  Segment part 51.            Intra module refs:   BSP_GpioPort1Isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MRFI_GpioIsr            82B4 
               calls direct
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 82CE - 82E3 (0x16 bytes), align: 1
  Segment part 52.            Intra module refs:   BSP_GpioPort1Isr::??INTVEC 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BSP_GpioPort1Isr        82CE 
               interrupt function
               calls direct
               CSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 82E4 - 82F5 (0x12 bytes), align: 1
  Segment part 53.            Intra module refs:   ?Subroutine13
                                                   MRFI_EnableRxAddrFilter
                                                   MRFI_Init
                                                   MRFI_SetRxAddrFilter
                                                   MRFI_Transmit
                                                   MRFI_WakeUp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mrfiSpiWriteReg         82E4 
               calls direct
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 54. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MRFI_DisableRxAddrFilter
                                   
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 82F6 - 830B (0x16 bytes), align: 1
  Segment part 55.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MRFI_EnableRxAddrFilter
                                   82F6            SMPL_Init (nwk_api)
               calls direct
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 830C - 8315 (0xa bytes), align: 1
  Segment part 56.            Intra module refs:   MRFI_EnableRxAddrFilter
                                                   MRFI_Transmit
                                                   spiBurstFifoAccess
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            830C 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8316 - 833F (0x2a bytes), align: 1
  Segment part 57.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MRFI_SetRxAddrFilter    8316            SMPL_Init (nwk_api)
               calls direct
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8340 - 8353 (0x14 bytes), align: 1
  Segment part 58.            Intra module refs:   ?Subroutine13
                                                   MRFI_RxOn
           LOCAL                   ADDRESS         
           =====                   =======         
           Mrfi_RxModeOn           8340 
               calls direct
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8354 - 8365 (0x12 bytes), align: 1
  Segment part 59.            Intra module refs:   ?Subroutine5
                                                   MRFI_Init
                                                   MRFI_RxIdle
                                                   MRFI_Transmit
           LOCAL                   ADDRESS         
           =====                   =======         
           Mrfi_RxModeOff          8354 
               calls direct
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8366 - 836D (0x8 bytes), align: 1
  Segment part 60.            Intra module refs:   MRFI_GpioIsr
                                                   MRFI_Init
                                                   MRFI_Transmit
                                                   Mrfi_RxModeOff
                                                   Mrfi_RxModeOn
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine16           8366 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 836E - 837F (0x12 bytes), align: 1
  Segment part 61.            Intra module refs:   MRFI_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MRFI_SetRFPwr           836E            nwk_radioControl (nwk_ioctl)
               calls direct
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8380 - 8391 (0x12 bytes), align: 1
  Segment part 62.            Intra module refs:   MRFI_SetLogicalChannel
                                                   MRFI_SetRFPwr
                                                   MRFI_Transmit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           8380 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8392 - 83A3 (0x12 bytes), align: 1
  Segment part 63.            Intra module refs:   MRFI_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MRFI_SetLogicalChannel
                                   8392 
               calls direct
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 83A4 - 83AB (0x8 bytes), align: 1
  Segment part 64.            Intra module refs:   MRFI_SetLogicalChannel
                                                   MRFI_SetRFPwr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            83A4 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 83AC - 83B7 (0xc bytes), align: 1
  Segment part 65.            Intra module refs:   MRFI_Transmit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mrfiSpiWriteTxFifo      83AC 
               calls direct
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 83B8 - 83EB (0x34 bytes), align: 1
  Segment part 66.            Intra module refs:   MRFI_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mrfiSpiInit             83B8 
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 83EC - 83F1 (0x6 bytes), align: 1
  Segment part 67.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MRFI_GetRadioState      83EC            SMPL_SendOpt (nwk_api)
                                                   nwk_join (nwk_join)
                                                   nwk_link (nwk_link)
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 83F2 - 83FD (0xc bytes), align: 1
  Segment part 68.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MRFI_PostKillSem        83F2            nwk_isConnectionValid (nwk)
                                                   nwk_processJoin (nwk_join)
                                                   nwk_processLink (nwk_link)
                                                   nwk_processMgmt (nwk_mgmt)
                                                   nwk_processPing (nwk_ping)
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 83FE - 844F (0x52 bytes), align: 1
  Segment part 69.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MRFI_ReplyDelay         83FE            nwk_join (nwk_join)
                                                   nwk_link (nwk_link)
               calls direct
               CSTACK = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8450 - 846F (0x20 bytes), align: 1
  Segment part 70.            Intra module refs:   ?Subroutine14
                                                   MRFI_Init
                                                   MRFI_Transmit
           LOCAL                   ADDRESS         
           =====                   =======         
           Mrfi_DelayUsec          8450 
               calls direct
               CSTACK = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8470 - 8475 (0x6 bytes), align: 1
  Segment part 71.            Intra module refs:   MRFI_Init
                                                   MRFI_RxAddrIsFiltered
                                                   Mrfi_DelayUsec
                                                   Mrfi_SyncPinRxIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            8470 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8476 - 8481 (0xc bytes), align: 1
  Segment part 72.            Intra module refs:   MRFI_ReplyDelay
                                                   Mrfi_DelayUsec
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            8476 
    -------------------------------------------------------------------------
CODE
  Segment part 73. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MRFI_DelayMs            
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8482 - 8497 (0x16 bytes), align: 1
  Segment part 74.            Intra module refs:   MRFI_Transmit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MRFI_RandomByte         8482            nwk_frameInit (nwk_frame)
                                                   nwk_joinInit (nwk_join)
                                                   nwk_linkInit (nwk_link)
                                                   nwk_mgmtInit (nwk_mgmt)
                                                   nwk_pingInit (nwk_ping)
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8498 - 84B1 (0x1a bytes), align: 1
  Segment part 75.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MRFI_Rssi               8498            nwk_radioControl (nwk_ioctl)
               calls direct
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 84B2 - 84F3 (0x42 bytes), align: 1
  Segment part 76.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MRFI_WakeUp             84B2            ?Subroutine0 (nwk_link)
                                                   SMPL_Init (nwk_api)
                                                   nwk_join (nwk_join)
                                                   nwk_radioControl (nwk_ioctl)
               calls direct
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 84F4 - 850B (0x18 bytes), align: 1
  Segment part 77.            Intra module refs:   MRFI_WakeUp
                                                   Mrfi_RxModeOff
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           84F4 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 850C - 851B (0x10 bytes), align: 1
  Segment part 78.            Intra module refs:   MRFI_Sleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MRFI_RxIdle             850C            ?Subroutine1 (nwk_link)
                                                   nwk_join (nwk_join)
                                                   nwk_radioControl (nwk_ioctl)
               calls direct
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 851C - 853B (0x20 bytes), align: 1
  Segment part 79.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MRFI_Sleep              851C            ?Subroutine1 (nwk_link)
                                                   nwk_join (nwk_join)
                                                   nwk_radioControl (nwk_ioctl)
               calls direct
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 853C - 854D (0x12 bytes), align: 1
  Segment part 80.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MRFI_RxOn               853C            ?Subroutine0 (nwk_link)
                                                   nwk_join (nwk_join)
                                                   nwk_radioControl (nwk_ioctl)
               calls direct
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 854E - 8561 (0x14 bytes), align: 1
  Segment part 81.            Intra module refs:   MRFI_RxIdle
                                                   MRFI_RxOn
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            854E 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8562 - 856D (0xc bytes), align: 1
  Segment part 82.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MRFI_Receive            8562            MRFI_RxCompleteISR (nwk_frame)
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 856E - 8641 (0xd4 bytes), align: 1
  Segment part 83.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MRFI_Transmit           856E            nwk_sendFrame (nwk_frame)
               calls direct and indirect
               CSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8642 - 8661 (0x20 bytes), align: 1
  Segment part 84.            Intra module refs:   MRFI_Rssi
                                                   MRFI_Transmit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           8642 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8662 - 879B (0x13a bytes), align: 1
  Segment part 85.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MRFI_Init               8662            SMPL_Init (nwk_api)
               calls direct and indirect
               CSTACK = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F50 - 9F5F (0x10 bytes), align: 1
  Segment part 86.            Intra module refs:   MRFI_Init
                                                   MRFI_Rssi
                                                   MRFI_Transmit
                                                   Mrfi_SyncPinRxIsr
                                                   mrfiSpiWriteReg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            9F50 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9C84 - 9CAB (0x28 bytes), align: 1
  Segment part 33.            Intra module refs:   MRFI_Rssi
                                                   Mrfi_SyncPinRxIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           Mrfi_CalculateRssi      9C84 
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FFE0 - FFE7 (0x8 bytes), align: 1
  Segment part 17. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BSP_GpioPort1Isr::??INTVEC 6
                                   FFE6 
    -------------------------------------------------------------------------
CSTACK
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
DATA16_ID
  Relative segment, address: 805E - 8061 (0x4 bytes), align: 0
  Segment part 32.            Intra module refs:   mrfiRxFilterAddr
    -------------------------------------------------------------------------
CODE
  Segment part 87. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r4         
    -------------------------------------------------------------------------
CODE
  Segment part 88. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r5         

    *************************************************************************

  FILE NAME : C:\Users\Raúl\Desktop\Projecte\Tot funciona bé\eZ430-RF2500 Wireless Sensor Monitor - timer\Embedded\IAR\CC2500 Sensor Demo-End Device\Obj\nwk.r43
  PROGRAM MODULE, NAME : nwk

  SEGMENTS IN THE MODULE
  ======================
DATA16_I
  Relative segment, address: 0206 - 022B (0x26 bytes), align: 0
  Segment part 2.             Intra module refs:   initializeConnection
                                                   map_lid2idx
                                                   nwk_allocateLocalRxPort
                                                   nwk_findPeer
                                                   nwk_getConnInfo
                                                   nwk_getNextConnection
                                                   nwk_isConnectionValid
                                                   nwk_isLinkDuplicate
                                                   nwk_nwkInit
           LOCAL                   ADDRESS         
           =====                   =======         
           sPersistInfo            0206 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 94D0 - 9555 (0x86 bytes), align: 1
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_nwkInit             94D0            SMPL_Init (nwk_api)
               calls direct
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 989A - 98E5 (0x4c bytes), align: 1
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_getNextConnection   989A            nwk_link (nwk_link)
                                                   smpl_send_link_reply (nwk_link)
               calls direct
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9BD0 - 9BFD (0x2e bytes), align: 1
  Segment part 20.            Intra module refs:   nwk_getNextConnection
           LOCAL                   ADDRESS         
           =====                   =======         
           initializeConnection    9BD0 
               calls direct
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A05C - A061 (0x6 bytes), align: 1
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_freeConnection      A05C            nwk_connectionControl (nwk_ioctl)
                                                   nwk_link (nwk_link)
                                                   smpl_send_link_reply (nwk_link)
                                                   smpl_send_unlink_reply (nwk_link)
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9C58 - 9C83 (0x2c bytes), align: 1
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_getConnInfo         9C58            SMPL_SendOpt (nwk_api)
                                                   nwk_QfindOldest (nwk_QMgmt)
                                                   nwk_connectionControl (nwk_ioctl)
                                                   nwk_radioControl (nwk_ioctl)
                                                   nwk_retrieveFrame (nwk_frame)
               calls direct
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9FEA - 9FF5 (0xc bytes), align: 1
  Segment part 14.            Intra module refs:   nwk_allocateLocalRxPort
                                                   nwk_isConnectionValid
                                                   nwk_isLinkDuplicate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            9FEA 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9A36 - 9A6F (0x3a bytes), align: 1
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_isLinkDuplicate     9A36            smpl_send_link_reply (nwk_link)
               calls direct
               CSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_findAddressMatch    
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9CAC - 9CD1 (0x26 bytes), align: 1
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_checkConnInfo       9CAC            SMPL_SendOpt (nwk_api)
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 97A4 - 97FD (0x5a bytes), align: 1
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_isConnectionValid   97A4            dispatchFrame (nwk_frame)
               calls direct
               CSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9102 - 91C3 (0xc2 bytes), align: 1
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_allocateLocalRxPort
                                   9102            nwk_link (nwk_link)
                                                   smpl_send_link_reply (nwk_link)
               calls direct
               CSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9028 - 9053 (0x2c bytes), align: 1
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_getNumObjectFromMsg
                                   9028            smpl_send_link_reply (nwk_link)
               calls direct
               CSTACK = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9054 - 9059 (0x6 bytes), align: 1
  Segment part 7.             Intra module refs:   nwk_getNumObjectFromMsg
                                                   nwk_isValidReply
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            9054 
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_checkAppMsgTID      
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 905A - 909B (0x42 bytes), align: 1
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_findPeer            905A            smpl_send_unlink_reply (nwk_link)
               calls direct
               CSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 909C - 90C5 (0x2a bytes), align: 1
  Segment part 10.            Intra module refs:   initializeConnection
                                                   nwk_getConnInfo
           LOCAL                   ADDRESS         
           =====                   =======         
           map_lid2idx             909C 
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 90C6 - 9101 (0x3c bytes), align: 1
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_isValidReply        90C6            nwk_processJoin (nwk_join)
                                                   nwk_processLink (nwk_link)
                                                   nwk_processMgmt (nwk_mgmt)
                                                   nwk_processPing (nwk_ping)
               calls direct
               CSTACK = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9A70 - 9AA5 (0x36 bytes), align: 1
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_putNumObjectIntoMsg
                                   9A70            nwk_join (nwk_join)
                                                   nwk_link (nwk_link)
               calls direct
               CSTACK = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A086 - A089 (0x4 bytes), align: 1
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_NVObj               A086            SMPL_Ioctl (nwk_api)
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA16_ID
  Relative segment, address: 8062 - 8087 (0x26 bytes), align: 0
  Segment part 3.             Intra module refs:   sPersistInfo
    -------------------------------------------------------------------------
CODE
  Segment part 23. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r4         
    -------------------------------------------------------------------------
CODE
  Segment part 24. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r5         

    *************************************************************************

  FILE NAME : C:\Users\Raúl\Desktop\Projecte\Tot funciona bé\eZ430-RF2500 Wireless Sensor Monitor - timer\Embedded\IAR\CC2500 Sensor Demo-End Device\Obj\nwk_QMgmt.r43
  PROGRAM MODULE, NAME : nwk_QMgmt

  SEGMENTS IN THE MODULE
  ======================
DATA16_Z
  Relative segment, address: 0260 - 0293 (0x34 bytes), align: 0
  Segment part 2.             Intra module refs:   nwk_QInit
                                                   nwk_QadjustOrder
                                                   nwk_QfindOldest
                                                   nwk_QfindSlot
           LOCAL                   ADDRESS         
           =====                   =======         
           sInFrameQ               0260 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 0294 - 02C7 (0x34 bytes), align: 0
  Segment part 3.             Intra module refs:   nwk_QInit
                                                   nwk_QfindSlot
           LOCAL                   ADDRESS         
           =====                   =======         
           sOutFrameQ              0294 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9E10 - 9E2B (0x1c bytes), align: 1
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_QInit               9E10            nwk_nwkInit (nwk)
               calls direct
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 95D8 - 9655 (0x7e bytes), align: 1
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_QfindSlot           95D8            MRFI_RxCompleteISR (nwk_frame)
                                                   nwk_buildFrame (nwk_frame)
               calls direct
               CSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9C2C - 9C57 (0x2c bytes), align: 1
  Segment part 6.             Intra module refs:   nwk_QfindSlot
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_QadjustOrder        9C2C            nwk_retrieveFrame (nwk_frame)
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8F48 - 9027 (0xe0 bytes), align: 1
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_QfindOldest         8F48            nwk_retrieveFrame (nwk_frame)
               calls direct
               CSTACK = 00000000 ( 00000016 )
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_getQ                
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 9. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r4         
    -------------------------------------------------------------------------
CODE
  Segment part 10. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r5         

    *************************************************************************

  FILE NAME : C:\Users\Raúl\Desktop\Projecte\Tot funciona bé\eZ430-RF2500 Wireless Sensor Monitor - timer\Embedded\IAR\CC2500 Sensor Demo-End Device\Obj\nwk_api.r43
  PROGRAM MODULE, NAME : nwk_api

  SEGMENTS IN THE MODULE
  ======================
DATA16_Z
  Relative segment, address: 02C8 - 02C8 (0x1 bytes), align: 0
  Segment part 2.             Intra module refs:   SMPL_Init
                                                   SMPL_Ioctl
           LOCAL                   ADDRESS         
           =====                   =======         
           sInit_done              02C8 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9ADA - 9B0D (0x34 bytes), align: 1
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SMPL_Init               9ADA            main (main_ED)
               calls direct
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SMPL_LinkListen         
               calls direct
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SMPL_Send               
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9656 - 96D1 (0x7c bytes), align: 1
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SMPL_SendOpt            9656            linkTo (main_ED)
               calls direct
               CSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SMPL_Receive            
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A082 - A085 (0x4 bytes), align: 1
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SMPL_Link               A082            linkTo (main_ED)
               calls direct
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SMPL_Unlink             
               calls direct
    -------------------------------------------------------------------------
CODE
  Segment part 5. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SMPL_Ping               
               calls direct
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SMPL_Commission         
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8D5C - 8E5B (0x100 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SMPL_Ioctl              8D5C            ?Subroutine3 (main_ED)
                                                   Segment part 18 (nwk_link)
                                                   linkTo (main_ED)
                                                   main (main_ED)
                                                   nwk_join (nwk_join)
               calls direct
               CSTACK = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 13. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r4         
    -------------------------------------------------------------------------
CODE
  Segment part 14. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r5         

    *************************************************************************

  FILE NAME : C:\Users\Raúl\Desktop\Projecte\Tot funciona bé\eZ430-RF2500 Wireless Sensor Monitor - timer\Embedded\IAR\CC2500 Sensor Demo-End Device\Obj\nwk_frame.r43
  PROGRAM MODULE, NAME : nwk_frame

  SEGMENTS IN THE MODULE
  ======================
DATA16_C
  Relative segment, address: 8000 - 800B (0xc bytes), align: 1
  Segment part 2.             Intra module refs:   dispatchFrame
           LOCAL                   ADDRESS         
           =====                   =======         
           func                    8000 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 02C9 - 02C9 (0x1 bytes), align: 0
  Segment part 3.             Intra module refs:   nwk_buildFrame
                                                   nwk_frameInit
           LOCAL                   ADDRESS         
           =====                   =======         
           sTRACTID                02C9 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 0232 - 0233 (0x2 bytes), align: 1
  Segment part 4.             Intra module refs:   dispatchFrame
                                                   nwk_buildFrame
                                                   nwk_frameInit
           LOCAL                   ADDRESS         
           =====                   =======         
           sMyAddr                 0232 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 02CA - 02CA (0x1 bytes), align: 0
  Segment part 5.             Intra module refs:   nwk_buildFrame
                                                   nwk_getMyRxType
           LOCAL                   ADDRESS         
           =====                   =======         
           sMyRxType               02CA 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 02CB - 02CB (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   nwk_frameInit
                                                   nwk_sendFrame
           LOCAL                   ADDRESS         
           =====                   =======         
           sMyTxType               02CB 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 0234 - 0235 (0x2 bytes), align: 1
  Segment part 7.             Intra module refs:   dispatchFrame
                                                   nwk_frameInit
           LOCAL                   ADDRESS         
           =====                   =======         
           spCallback              0234 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9D7C - 9D99 (0x1e bytes), align: 1
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_frameInit           9D7C            nwk_nwkInit (nwk)
               calls direct
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9448 - 94CF (0x88 bytes), align: 1
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_buildFrame          9448            SMPL_SendOpt (nwk_api)
                                                   nwk_rawSend (nwk_ioctl)
                                                   smpl_send_link_reply (nwk_link)
                                                   smpl_send_ping_reply (nwk_ping)
                                                   smpl_send_unlink_reply (nwk_link)
               calls direct
               CSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9DD6 - 9DF3 (0x1e bytes), align: 1
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MRFI_RxCompleteISR      9DD6            Mrfi_SyncPinRxIsr (mrfi)
               calls direct
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 927E - 9327 (0xaa bytes), align: 1
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_retrieveFrame       927E            nwk_rawReceive (nwk_ioctl)
               calls direct
               CSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 93BA - 9447 (0x8e bytes), align: 1
  Segment part 10.            Intra module refs:   MRFI_RxCompleteISR
           LOCAL                   ADDRESS         
           =====                   =======         
           dispatchFrame           93BA 
               calls direct and indirect
               CSTACK = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9BFE - 9C2B (0x2e bytes), align: 1
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_sendFrame           9BFE            ?Subroutine3 (nwk_link)
                                                   SMPL_SendOpt (nwk_api)
                                                   nwk_rawSend (nwk_ioctl)
                                                   smpl_send_ping_reply (nwk_ping)
                                                   smpl_send_unlink_reply (nwk_link)
               calls direct
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A062 - A067 (0x6 bytes), align: 1
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_getMyRxType         A062            nwk_link (nwk_link)
                                                   smpl_send_link_reply (nwk_link)
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 15. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r4         
    -------------------------------------------------------------------------
CODE
  Segment part 16. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r5         

    *************************************************************************

  FILE NAME : C:\Users\Raúl\Desktop\Projecte\Tot funciona bé\eZ430-RF2500 Wireless Sensor Monitor - timer\Embedded\IAR\CC2500 Sensor Demo-End Device\Obj\nwk_freq.r43
  PROGRAM MODULE, NAME : nwk_freq

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: A08E - A08F (0x2 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_freqInit            A08E            nwk_nwkInit (nwk)
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A07A - A07D (0x4 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_processFreq         A07A            func (nwk_frame)
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 4. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r4         
    -------------------------------------------------------------------------
CODE
  Segment part 5. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r5         

    *************************************************************************

  FILE NAME : C:\Users\Raúl\Desktop\Projecte\Tot funciona bé\eZ430-RF2500 Wireless Sensor Monitor - timer\Embedded\IAR\CC2500 Sensor Demo-End Device\Obj\nwk_globals.r43
  PROGRAM MODULE, NAME : nwk_globals

  SEGMENTS IN THE MODULE
  ======================
DATA16_C
  Relative segment, address: 8053 - 8056 (0x4 bytes), align: 0
  Segment part 2.             Intra module refs:   nwk_getMyAddress
                                                   nwk_globalsInit
           LOCAL                   ADDRESS         
           =====                   =======         
           sMyROMAddress           8053 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 02CC - 02CF (0x4 bytes), align: 0
  Segment part 3.             Intra module refs:   nwk_globalsInit
                                                   nwk_setAPAddress
           LOCAL                   ADDRESS         
           =====                   =======         
           sAPAddress              02CC 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 02D0 - 02D3 (0x4 bytes), align: 0
  Segment part 4.             Intra module refs:   ?Subroutine0
                                                   nwk_getMyAddress
           LOCAL                   ADDRESS         
           =====                   =======         
           sMyRAMAddress           02D0 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 02D4 - 02D4 (0x1 bytes), align: 0
  Segment part 5.             Intra module refs:   ?Subroutine0
                                                   nwk_getMyAddress
                                                   nwk_globalsInit
                                                   nwk_setMyAddress
           LOCAL                   ADDRESS         
           =====                   =======         
           sRAMAddressIsSet        02D4 
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 8057 - 805B (0x5 bytes), align: 0
  Segment part 6.             Intra module refs:   nwk_getFWVersion
           LOCAL                   ADDRESS         
           =====                   =======         
           sVersionInfo            8057 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9D9A - 9DB7 (0x1e bytes), align: 1
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_globalsInit         9D9A            nwk_nwkInit (nwk)
               calls direct
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F9C - 9FA9 (0xe bytes), align: 1
  Segment part 15.            Intra module refs:   nwk_globalsInit
                                                   nwk_setMyAddress
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            9F9C 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9EB0 - 9EC1 (0x12 bytes), align: 1
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_getMyAddress        9EB0            SMPL_Init (nwk_api)
                                                   nwk_deviceAddress (nwk_ioctl)
                                                   nwk_frameInit (nwk_frame)
                                                   nwk_isValidReply (nwk)
                                                   nwk_processMgmt (nwk_mgmt)
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A056 - A05B (0x6 bytes), align: 1
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_getFWVersion        A056            SMPL_Ioctl (nwk_api)
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A06E - A071 (0x4 bytes), align: 1
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_getProtocolVersion
                                   A06E            SMPL_Ioctl (nwk_api)
                                                   nwk_join (nwk_join)
                                                   nwk_link (nwk_link)
                                                   smpl_send_link_reply (nwk_link)
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9E74 - 9E89 (0x16 bytes), align: 1
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_setMyAddress        9E74            nwk_deviceAddress (nwk_ioctl)
               calls direct
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9FDE - 9FE9 (0xc bytes), align: 1
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_setAPAddress        9FDE            nwk_join (nwk_join)
               calls direct
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_getAPAddress        
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A068 - A06D (0x6 bytes), align: 1
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_getBCastAddress     A068            nwk_join (nwk_join)
                                                   nwk_link (nwk_link)
                                                   nwk_nwkInit (nwk)
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 16. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r4         
    -------------------------------------------------------------------------
CODE
  Segment part 17. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r5         

    *************************************************************************

  FILE NAME : C:\Users\Raúl\Desktop\Projecte\Tot funciona bé\eZ430-RF2500 Wireless Sensor Monitor - timer\Embedded\IAR\CC2500 Sensor Demo-End Device\Obj\nwk_ioctl.r43
  PROGRAM MODULE, NAME : nwk_ioctl

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 879C - 87C9 (0x2e bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_deviceAddress       879C            SMPL_Ioctl (nwk_api)
               calls direct
               CSTACK = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 87CA - 87CF (0x6 bytes), align: 1
  Segment part 4.             Intra module refs:   nwk_deviceAddress
                                                   nwk_radioControl
                                                   nwk_rawSend
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            87CA 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 87D0 - 8869 (0x9a bytes), align: 1
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_radioControl        87D0            SMPL_Ioctl (nwk_api)
               calls direct
               CSTACK = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 886A - 8895 (0x2c bytes), align: 1
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_rawReceive          886A            SMPL_Ioctl (nwk_api)
               calls direct
               CSTACK = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8896 - 88E5 (0x50 bytes), align: 1
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_rawSend             8896            SMPL_Ioctl (nwk_api)
               calls direct
               CSTACK = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9D1A - 9D3B (0x22 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_connectionControl   9D1A            SMPL_Ioctl (nwk_api)
               calls direct
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 8. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r4         
    -------------------------------------------------------------------------
CODE
  Segment part 9. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r5         

    *************************************************************************

  FILE NAME : C:\Users\Raúl\Desktop\Projecte\Tot funciona bé\eZ430-RF2500 Wireless Sensor Monitor - timer\Embedded\IAR\CC2500 Sensor Demo-End Device\Obj\nwk_join.r43
  PROGRAM MODULE, NAME : nwk_join

  SEGMENTS IN THE MODULE
  ======================
DATA16_Z
  Relative segment, address: 0236 - 0239 (0x4 bytes), align: 1
  Segment part 2.             Intra module refs:   nwk_getJoinToken
                                                   nwk_join
                                                   nwk_joinInit
                                                   nwk_setJoinToken
           LOCAL                   ADDRESS         
           =====                   =======         
           sJoinToken              0236 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 023A - 023B (0x2 bytes), align: 1
  Segment part 3.             Intra module refs:   nwk_joinInit
           LOCAL                   ADDRESS         
           =====                   =======         
           spCallback              023A 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 02D5 - 02D5 (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   nwk_join
                                                   nwk_joinInit
                                                   nwk_processJoin
           LOCAL                   ADDRESS         
           =====                   =======         
           sTid                    02D5 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9CD2 - 9CF7 (0x26 bytes), align: 1
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_joinInit            9CD2            nwk_nwkInit (nwk)
               calls direct
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9EC2 - 9ED3 (0x12 bytes), align: 1
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_setJoinToken        9EC2            SMPL_Ioctl (nwk_api)
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9ED4 - 9EE5 (0x12 bytes), align: 1
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_getJoinToken        9ED4            SMPL_Ioctl (nwk_api)
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8E5C - 8F47 (0xec bytes), align: 1
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_join                8E5C            SMPL_Init (nwk_api)
               calls direct
               CSTACK = 00000000 ( 00000022 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9D3C - 9D5B (0x20 bytes), align: 1
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_processJoin         9D3C            func (nwk_frame)
               calls direct
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 10. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r4         
    -------------------------------------------------------------------------
CODE
  Segment part 11. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r5         

    *************************************************************************

  FILE NAME : C:\Users\Raúl\Desktop\Projecte\Tot funciona bé\eZ430-RF2500 Wireless Sensor Monitor - timer\Embedded\IAR\CC2500 Sensor Demo-End Device\Obj\nwk_link.r43
  PROGRAM MODULE, NAME : nwk_link

  SEGMENTS IN THE MODULE
  ======================
DATA16_Z
  Relative segment, address: 023C - 023F (0x4 bytes), align: 1
  Segment part 2.             Intra module refs:   nwk_getLinkToken
                                                   nwk_link
                                                   nwk_linkInit
                                                   nwk_setLinkToken
                                                   smpl_send_link_reply
           LOCAL                   ADDRESS         
           =====                   =======         
           sLinkToken              023C 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 02D6 - 02D6 (0x1 bytes), align: 0
  Segment part 3.             Intra module refs:   smpl_send_link_reply
           LOCAL                   ADDRESS         
           =====                   =======         
           sListenActive           02D6 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 02D7 - 02D8 (0x2 bytes), align: 0
  Segment part 4.             Intra module refs:   nwk_linkInit
                                                   smpl_send_link_reply
           LOCAL                   ADDRESS         
           =====                   =======         
           sServiceLinkID          02D7 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 02D9 - 02D9 (0x1 bytes), align: 0
  Segment part 5.             Intra module refs:   smpl_send_link_reply
           LOCAL                   ADDRESS         
           =====                   =======         
           sNumLinkers             02D9 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 02DA - 02DA (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   nwk_link
                                                   nwk_linkInit
                                                   nwk_processLink
           LOCAL                   ADDRESS         
           =====                   =======         
           sTid                    02DA 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9B72 - 9BA1 (0x30 bytes), align: 1
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_linkInit            9B72            nwk_nwkInit (nwk)
               calls direct
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F1C - 9F2D (0x12 bytes), align: 1
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_setLinkToken        9F1C            SMPL_Ioctl (nwk_api)
                                                   nwk_join (nwk_join)
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F2E - 9F3F (0x12 bytes), align: 1
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_getLinkToken        9F2E            SMPL_Ioctl (nwk_api)
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_unlink              
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9FF6 - 9FF7 (0x2 bytes), align: 1
  Segment part 17.            Intra module refs:   nwk_link
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            9FF6 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9FF8 - A001 (0xa bytes), align: 1
  Segment part 18.            Intra module refs:   ?Subroutine2
                                                   nwk_link
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A034 - A03D (0xa bytes), align: 1
  Segment part 19.            Intra module refs:   nwk_link
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            A034 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A016 - A01F (0xa bytes), align: 1
  Segment part 20.            Intra module refs:   nwk_link
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            A016 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 88E6 - 8A17 (0x132 bytes), align: 1
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_link                88E6            SMPL_Link (nwk_api)
               calls direct
               CSTACK = 00000000 ( 00000022 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9740 - 97A3 (0x64 bytes), align: 1
  Segment part 14.            Intra module refs:   nwk_processLink
           LOCAL                   ADDRESS         
           =====                   =======         
           smpl_send_unlink_reply
                                   9740 
               calls direct
               CSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 8A18 - 8B33 (0x11c bytes), align: 1
  Segment part 10.            Intra module refs:   nwk_processLink
           LOCAL                   ADDRESS         
           =====                   =======         
           smpl_send_link_reply    8A18 
               calls direct
               CSTACK = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9F8E - 9F9B (0xe bytes), align: 1
  Segment part 11.            Intra module refs:   smpl_send_link_reply
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            9F8E 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9E9E - 9EAF (0x12 bytes), align: 1
  Segment part 12.            Intra module refs:   smpl_send_link_reply
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            9E9E 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9E8A - 9E9D (0x14 bytes), align: 1
  Segment part 13.            Intra module refs:   smpl_send_link_reply
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            9E8A 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9932 - 997B (0x4a bytes), align: 1
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_processLink         9932            func (nwk_frame)
               calls direct
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_getLocalLinkID      
               calls direct
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_setListenContext    
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 24. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r4         
    -------------------------------------------------------------------------
CODE
  Segment part 25. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r5         

    *************************************************************************

  FILE NAME : C:\Users\Raúl\Desktop\Projecte\Tot funciona bé\eZ430-RF2500 Wireless Sensor Monitor - timer\Embedded\IAR\CC2500 Sensor Demo-End Device\Obj\nwk_mgmt.r43
  PROGRAM MODULE, NAME : nwk_mgmt

  SEGMENTS IN THE MODULE
  ======================
DATA16_Z
  Segment part 2. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           sAPAddr                 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 02DB - 02DB (0x1 bytes), align: 0
  Segment part 3.             Intra module refs:   nwk_mgmtInit
                                                   nwk_processMgmt
           LOCAL                   ADDRESS         
           =====                   =======         
           sTid                    02DB 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A002 - A00B (0xa bytes), align: 1
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_mgmtInit            A002            nwk_nwkInit (nwk)
               calls direct
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 99C2 - 99FB (0x3a bytes), align: 1
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_processMgmt         99C2            func (nwk_frame)
               calls direct
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_poll                
               calls direct
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 7. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r4         
    -------------------------------------------------------------------------
CODE
  Segment part 8. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r5         

    *************************************************************************

  FILE NAME : C:\Users\Raúl\Desktop\Projecte\Tot funciona bé\eZ430-RF2500 Wireless Sensor Monitor - timer\Embedded\IAR\CC2500 Sensor Demo-End Device\Obj\nwk_ping.r43
  PROGRAM MODULE, NAME : nwk_ping

  SEGMENTS IN THE MODULE
  ======================
DATA16_Z
  Relative segment, address: 02DC - 02DC (0x1 bytes), align: 0
  Segment part 2.             Intra module refs:   nwk_pingInit
                                                   nwk_processPing
           LOCAL                   ADDRESS         
           =====                   =======         
           sTid                    02DC 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A02A - A033 (0xa bytes), align: 1
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_pingInit            A02A            nwk_nwkInit (nwk)
               calls direct
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 5. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_ping                
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 997C - 99C1 (0x46 bytes), align: 1
  Segment part 4.             Intra module refs:   nwk_processPing
           LOCAL                   ADDRESS         
           =====                   =======         
           smpl_send_ping_reply    997C 
               calls direct
               CSTACK = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9BA2 - 9BCF (0x2e bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_processPing         9BA2            func (nwk_frame)
               calls direct
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 7. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r4         
    -------------------------------------------------------------------------
CODE
  Segment part 8. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r5         

    *************************************************************************

  FILE NAME : C:\Users\Raúl\Desktop\Projecte\Tot funciona bé\eZ430-RF2500 Wireless Sensor Monitor - timer\Embedded\IAR\CC2500 Sensor Demo-End Device\Obj\nwk_security.r43
  PROGRAM MODULE, NAME : nwk_security

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: A090 - A091 (0x2 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_securityInit        A090            nwk_nwkInit (nwk)
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A07E - A081 (0x4 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_processSecurity     A07E            func (nwk_frame)
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 4. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r4         
    -------------------------------------------------------------------------
CODE
  Segment part 5. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r5         

    *************************************************************************

  FILE NAME : C:\Users\Raúl\Desktop\Projecte\Tot funciona bé\eZ430-RF2500 Wireless Sensor Monitor - timer\Embedded\IAR\CC2500 Sensor Demo-End Device\Obj\virtual_com_cmds.r43
  PROGRAM MODULE, NAME : virtual_com_cmds

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0001 - 0001 (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IE2                     0001 
    -------------------------------------------------------------------------
DATA16_AN
  Segment part 2. TENTATIVE. Used definition from mrfi
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IFG2                    
    -------------------------------------------------------------------------
DATA16_AN
  Segment part 3. TENTATIVE. Used definition from mrfi
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P3SEL                   
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0061 - 0061 (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA0CTL1                0061 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0062 - 0062 (0x1 bytes), align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA0BR0                 0062 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0063 - 0063 (0x1 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA0BR1                 0063 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0064 - 0064 (0x1 bytes), align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA0MCTL                0064 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0066 - 0066 (0x1 bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   USCI0RX_ISR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA0RXBUF               0066 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0067 - 0067 (0x1 bytes), align: 0
  Segment part 9. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UCA0TXBUF               0067 
    -------------------------------------------------------------------------
DATA16_I
  Relative segment, address: 022C - 022C (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   USCI0RX_ISR
           LOCAL                   ADDRESS         
           =====                   =======         
           verboseMode             022C 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 02DD - 02DD (0x1 bytes), align: 0
  Segment part 19.            Intra module refs:   USCI0RX_ISR
           LOCAL                   ADDRESS         
           =====                   =======         
           degCMode                02DD 
    -------------------------------------------------------------------------
CODE
  Segment part 29. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           COM_Init                
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TXString                
    -------------------------------------------------------------------------
CODE
  Segment part 22. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           transmitDataString      
               calls direct
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 25. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           transmitData            
               calls direct
    -------------------------------------------------------------------------
CODE
  Segment part 26. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 28. NOT NEEDED.
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 97FE - 984D (0x50 bytes), align: 1
  Segment part 20.            Intra module refs:   USCI0RX_ISR::??INTVEC 14
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           USCI0RX_ISR             97FE 
               interrupt function
               CSTACK = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FFE0 - FFEF (0x10 bytes), align: 1
  Segment part 10. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           USCI0RX_ISR::??INTVEC 14
                                   FFEE 
    -------------------------------------------------------------------------
CSTACK
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
DATA16_ID
  Relative segment, address: 8088 - 8088 (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   verboseMode
    -------------------------------------------------------------------------
CODE
  Segment part 30. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r4         
    -------------------------------------------------------------------------
CODE
  Segment part 31. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r5         
    -------------------------------------------------------------------------
DATA16_C
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
DATA16_C
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
DATA16_C
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
DATA16_C
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
DATA16_C
  Segment part 16. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\Users\Raúl\Desktop\Projecte\Tot funciona bé\eZ430-RF2500 Wireless Sensor Monitor - timer\Embedded\IAR\CC2500 Sensor Demo-End Device\Obj\vlo_rand.r43
  LIBRARY MODULE, NAME : VLO_Rand_Library

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 91C4 - 927D (0xba bytes), align: 1
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TI_getRandomIntegerFromVLO
                                   91EC            createRandomAddress (main_ED)
           TI_getRandomIntegerFromADC
                                   91C4 
           LOCAL                   ADDRESS         
           =====                   =======         
           adcloop                 91D4 
           sampling                91DA 
           mainLoop                9212 
           capture                 9218 
           zero                    922A 
           one                     923C 
           done                    9240 

    *************************************************************************

  FILE NAME : C:\Program Files (x86)\IAR Systems\Embedded Workbench 6.0\430\LIB\CLIB\cl430f.r43
  LIBRARY MODULE, NAME : ?_exit

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: A072, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _exit                   A072            exit (?clibexit)
    -------------------------------------------------------------------------
CODE
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __cstart_call_dtors     
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __cstart_closeall       
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A072 - A075 (0x4 bytes), align: 1
  Segment part 5.             Intra module refs:   _exit

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?clibexit

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: A076 - A079 (0x4 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exit                    A076            Segment part 14 (?cstart)
               calls direct
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?clibstubs

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __call_ctors            
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __call_dtors            
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Close_all              
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?__exit

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: A092 - A093 (0x2 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __exit                  A092            Segment part 5 (?_exit)
                                                   _exit (?_exit)
           ?C_EXIT                 A092 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?cstart

  SEGMENTS IN THE MODULE
  ======================
HEAP
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
CSTACK
  Relative segment, address: 0538, align: 1
  Segment part 1.
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 0240, align: 1
  Segment part 2.
    -------------------------------------------------------------------------
DATA16_I
  Relative segment, address: 0202, align: 1
  Segment part 3.
    -------------------------------------------------------------------------
DATA16_ID
  Relative segment, address: 805E, align: 1
  Segment part 4.
    -------------------------------------------------------------------------
CODE_I
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
CODE_ID
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: 808A - 808D (0x4 bytes), align: 1
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         808A            ?reset_vector (?reset_vector)
                                                   Absolute parts (?ABS_ENTRY_MOD)
           ?cstart_begin           808A 
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: 808E - 8095 (0x8 bytes), align: 1
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_call_low_level_init
                                   808E            __low_level_init (bsp)
    -------------------------------------------------------------------------
CSTART
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_init_copy_ramfunc
                                   
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: 8096 - 80A1 (0xc bytes), align: 1
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_init_zero       8096            degCMode (virtual_com_cmds)
                                                   mrfiIncomingPacket (mrfi)
                                                   mrfiRadioState (mrfi)
                                                   mrfiRndSeed (mrfi)
                                                   mrfiRxFilterEnabled (mrfi)
                                                   sAPAddress (nwk_globals)
                                                   sBackoffHelper (mrfi)
                                                   sInFrameQ (nwk_QMgmt)
                                                   sInit_done (nwk_api)
                                                   sIterationsPerUsec (bsp)
                                                   sJoinToken (nwk_join)
                                                   sKillSem (mrfi)
                                                   sLinkID1 (main_ED)
                                                   sLinkToken (nwk_link)
                                                   sListenActive (nwk_link)
                                                   sMyAddr (nwk_frame)
                                                   sMyRAMAddress (nwk_globals)
                                                   sMyRxType (nwk_frame)
                                                   sMyTxType (nwk_frame)
                                                   sNumLinkers (nwk_link)
                                                   sOutFrameQ (nwk_QMgmt)
                                                   sRAMAddressIsSet (nwk_globals)
                                                   sReplyDelayContext (mrfi)
                                                   sReplyDelayScalar (mrfi)
                                                   sSelfMeasureSem (main_ED)
                                                   sServiceLinkID (nwk_link)
                                                   sTRACTID (nwk_frame)
                                                   sTid (nwk_join)
                                                   sTid (nwk_link)
                                                   sTid (nwk_mgmt)
                                                   sTid (nwk_ping)
                                                   spCallback (nwk_frame)
                                                   spCallback (nwk_join)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: 80A2 - 80B1 (0x10 bytes), align: 1
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_init_copy       80A2            Flash_Addr (main_ED)
                                                   mrfiRxFilterAddr (mrfi)
                                                   sPersistInfo (nwk)
                                                   verboseMode (virtual_com_cmds)
    -------------------------------------------------------------------------
DIFUNCT
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_call_ctors      
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: 80B2 - 80B9 (0x8 bytes), align: 1
  Segment part 14.            Intra module refs:   ?cstart_call_low_level_init
                                                   Segment part 7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_call_main       80B2 
           ?cstart_end             80BA 
    -------------------------------------------------------------------------
CODE_ID
  Segment part 15. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?reset_vector

  SEGMENTS IN THE MODULE
  ======================
RESET
  Relative segment, address: FFFE - FFFF (0x2 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?reset_vector           FFFE            Segment part 7 (?cstart)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?Epilogue

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9EF8 - 9F09 (0x12 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Epilogue3              9F02            MRFI_ReplyDelay (mrfi)
           ?Epilogue4              9F00            MRFI_Transmit (mrfi)
                                                   nwk_QfindSlot (nwk_QMgmt)
                                                   nwk_findPeer (nwk)
                                                   nwk_isLinkDuplicate (nwk)
                                                   nwk_join (nwk_join)
                                                   smpl_send_link_reply (nwk_link)
           ?Epilogue5              9EFE            SMPL_SendOpt (nwk_api)
                                                   nwk_allocateLocalRxPort (nwk)
                                                   nwk_buildFrame (nwk_frame)
                                                   nwk_isConnectionValid (nwk)
                                                   nwk_link (nwk_link)
           ?Epilogue6              9EFC 
           ?Epilogue7              9EFA            nwk_retrieveFrame (nwk_frame)
           ?Epilogue8              9EF8            nwk_QfindOldest (nwk_QMgmt)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?Cast32f32i

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9328 - 93B9 (0x92 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Cast32sto32f           9328            linkTo (main_ED)
           _Cast32uto32f           933C 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : _Cast32fto32s

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9B40 - 9B71 (0x32 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Cast32fto32s           9B40            linkTo (main_ED)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_Extract

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 98E6 - 9931 (0x4c bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_Extract            98E6            _Cast32fto32s (_Cast32fto32s)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : _Mul32f

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 8C4C - 8D5B (0x110 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Mul32f                 8C4C            linkTo (main_ED)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?Mul816

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9B0E - 9B3F (0x32 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Mul8                   9B0E            MRFI_RandomByte (mrfi)
           ?Mul16                  9B12            BSP_Delay (bsp)
           ?Mul16to32u             9B12 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DivMod816u

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9DF4 - 9E0F (0x1c bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DivMod8u               9DF4 
           ?DivMod16u              9DF8            Segment part 0 (?DivMod816s)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DivMod816s

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9AA6 - 9AD9 (0x34 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DivMod8s               9AA6 
           ?DivMod16s              9AAA            Mrfi_CalculateRssi (mrfi)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ShiftLeft16_n

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ShiftLeft16_7          
           ?ShiftLeft16_6          
           ?ShiftLeft16_5          
           ?ShiftLeft16_4          
           ?ShiftLeft16_3          

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ShiftRight16u_n

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ShiftRight16u_7        
    -------------------------------------------------------------------------
CODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ShiftRight16u_6        
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ShiftRight16u_5        
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9FAA - 9FAD (0x4 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ShiftRight16u_4        9FAA            Mrfi_DelayUsec (mrfi)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 9FAE - 9FB7 (0xa bytes), align: 1
  Segment part 4.             Intra module refs:   ?ShiftRight16u_4
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ShiftRight16u_3        9FAE 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memcmp

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9DB8 - 9DD5 (0x1e bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memcmp                  9DB8            ?Subroutine1 (nwk)
                                                   dispatchFrame (nwk_frame)
                                                   nwk_QfindOldest (nwk_QMgmt)
                                                   nwk_findPeer (nwk)
                                                   nwk_isValidReply (nwk)
                                                   nwk_processMgmt (nwk_mgmt)
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memcpy

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9E44 - 9E5B (0x18 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memcpy                  9E44            ?Subroutine0 (nwk_globals)
                                                   ?Subroutine3 (nwk_link)
                                                   SMPL_Ioctl (nwk_api)
                                                   SMPL_SendOpt (nwk_api)
                                                   __data16_memcpy (?memzero)
                                                   nwk_buildFrame (nwk_frame)
                                                   nwk_deviceAddress (nwk_ioctl)
                                                   nwk_join (nwk_join)
                                                   nwk_link (nwk_link)
                                                   nwk_nwkInit (nwk)
                                                   nwk_radioControl (nwk_ioctl)
                                                   nwk_rawSend (nwk_ioctl)
                                                   nwk_retrieveFrame (nwk_frame)
                                                   nwk_setAPAddress (nwk_globals)
                                                   smpl_send_link_reply (nwk_link)
                                                   smpl_send_ping_reply (nwk_ping)
                                                   smpl_send_unlink_reply (nwk_link)
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memmove

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 99FC - 9A35 (0x3a bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memmove                 99FC            nwk_getNumObjectFromMsg (nwk)
                                                   nwk_putNumObjectIntoMsg (nwk)
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?CopyMemoryBytes

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9F70 - 9F7F (0x10 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?CopyMemoryBytes        9F70            MRFI_Receive (mrfi)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memset

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9E2C - 9E43 (0x18 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memset                  9E2C            MRFI_Init (mrfi)
                                                   Segment part 50 (mrfi)
                                                   nwk_QInit (nwk_QMgmt)
                                                   nwk_allocateLocalRxPort (nwk)
                                                   nwk_globalsInit (nwk_globals)
                                                   nwk_linkInit (nwk_link)
                                                   nwk_nwkInit (nwk)
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memzero

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 9EE6 - 9EF7 (0x12 bytes), align: 1
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_memzero        9EE6            ?cstart_init_zero (?cstart)
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: A08A - A08D (0x4 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_memcpy         A08A            ?cstart_init_copy (?cstart)
               calls direct
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_memmove        
               calls direct
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?setjmp

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           setjmp                  
    -------------------------------------------------------------------------
CODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_r5              
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_r4              
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_end             

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?longjmp

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           longjmp                 
    -------------------------------------------------------------------------
CODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?longjmp_r5             
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?longjmp_r4             
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?longjmp_end            

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?SwitchKey8

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SwitchKey8             

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?SwitchKey16

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SwitchKey16            




                ****************************************
                *                                      *
                *            MODULE SUMMARY            *
                *                                      *
                ****************************************

Module               CODE      DATA      CONST
------               ----      ----      -----
                    (Rel)  (Rel)  (Abs)  (Rel)
?Cast32f32i           146
?CopyMemoryBytes       16
?DivMod816s            52
?DivMod816u            28
?Epilogue              18
?FLT_Extract           76
?Mul816                50
?ShiftRight16u_n       14
?__exit                 2
?_exit                  4
?clibexit               4
?cstart                48
?memcmp                30
?memcpy                24
?memmove               58
?memset                24
?memzero               22
?reset_vector           2
VLO_Rand_Library      186
_Cast32fto32s          50
_Mul32f               272
bsp                   128      1      6
  + shared                            5
main_ED               704      4     21      2
  + common             20
mrfi                1 818     37     14     75
  + shared              8             2
  + common
nwk                   974     38            38
nwk_QMgmt             422    104
nwk_api               436      1
nwk_frame             560      7            12
nwk_freq                6
nwk_globals           112      9             9
nwk_ioctl             364
nwk_join              342      7
nwk_link              932      9
nwk_mgmt               68      1
nwk_ping              126      1
nwk_security            6
virtual_com_cmds       80      2      7      1
  + common             16
N/A (command line)           200
N/A (alignment)
----------          -----    ---     --    ---
Total:              8 204    421     55    137
  + common             20


                ****************************************
                *                                      *
                *              CALL GRAPH              *
                *                                      *
                ****************************************

  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK
    | Stack used (prev) :  00000000
  01  ADC10_ISR
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  00000004


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK
    | Stack used (prev) :  00000004
  01  Timer_A
      | Stack used (prev) :  00000004
      | + function block  :  00000004
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  00000008


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK
    | Stack used (prev) :  00000008
  04        memset
            | Stack used (prev) :  00000008
            | + function block  :  00000004
  06            memcmp
                | Stack used (prev) :  00000008
                | + function block  :  00000002
  07              memcmp
                  | Stack used (prev) :  00000008
                  | + function block  :  00000002
                  |  Already listed
  07              MRFI_PostKillSem
                  | Stack used (prev) :  00000008
                  | + function block  :  00000002
  06            nwk_isConnectionValid
                | Stack used (prev) :  0000000A
                | + function block  :  0000000C
  05          dispatchFrame
              | Stack used (prev) :  00000016
              | + function block  :  00000008
  06            nwk_QadjustOrder
                | Stack used (prev) :  00000008
                | + function block  :  00000002
  05          nwk_QfindSlot
              | Stack used (prev) :  0000000A
              | + function block  :  0000000A
  05          MRFI_Receive
              | Stack used (prev) :  00000008
              | + function block  :  00000002
  04        MRFI_RxCompleteISR
            | Stack used (prev) :  0000001E
            | + function block  :  00000004
  04        Mrfi_CalculateRssi
            | Stack used (prev) :  00000008
            | + function block  :  00000002
  05          spiRegAccess
              | Stack used (prev) :  00000008
              | + function block  :  00000002
  04        mrfiSpiReadReg
            | Stack used (prev) :  0000000A
            | + function block  :  00000002
  04        mrfiSpiReadReg
            | Stack used (prev) :  0000000A
            | + function block  :  00000002
            |  Already listed
  05          spiBurstFifoAccess
              | Stack used (prev) :  00000008
              | + function block  :  00000002
  04        mrfiSpiReadRxFifo
            | Stack used (prev) :  0000000A
            | + function block  :  00000002
  04        mrfiSpiReadRxFifo
            | Stack used (prev) :  0000000A
            | + function block  :  00000002
            |  Already listed
  04        mrfiSpiReadRxFifo
            | Stack used (prev) :  0000000A
            | + function block  :  00000002
            |  Already listed
  04        mrfiSpiCmdStrobe
            | Stack used (prev) :  00000008
            | + function block  :  00000002
  04        mrfiSpiCmdStrobe
            | Stack used (prev) :  00000008
            | + function block  :  00000002
            |  Already listed
  04        mrfiSpiCmdStrobe
            | Stack used (prev) :  00000008
            | + function block  :  00000002
            |  Already listed
  04        MRFI_RxAddrIsFiltered
            | Stack used (prev) :  00000008
            | + function block  :  00000006
  03      Mrfi_SyncPinRxIsr
          | Stack used (prev) :  00000022
          | + function block  :  00000008
  02    MRFI_GpioIsr
        | Stack used (prev) :  0000002A
        | + function block  :  00000002
  01  BSP_GpioPort1Isr
      | Stack used (prev) :  0000002C
      | + function block  :  0000000C
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  00000038


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK
    | Stack used (prev) :  00000038
  01  USCI0RX_ISR
      | Stack used (prev) :  00000038
      | + function block  :  00000006
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  0000003E


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  0000003E
  01  nwk_processFreq
      | Stack used (prev) :  0000003E
      | + function block  :  00000002
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000040


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  0000003E
  03      memcmp
          | Stack used (prev) :  00000008
          | + function block  :  00000002
          |  Already listed
  03      nwk_getMyAddress
          | Stack used (prev) :  0000003E
          | + function block  :  00000002
  02    nwk_isValidReply
        | Stack used (prev) :  00000040
        | + function block  :  00000006
  02    MRFI_PostKillSem
        | Stack used (prev) :  00000008
        | + function block  :  00000002
        |  Already listed
  01  nwk_processJoin
      | Stack used (prev) :  00000046
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000004A


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  0000003E
  03      memcpy
          | Stack used (prev) :  0000003E
          | + function block  :  00000004
  03      nwk_getProtocolVersion
          | Stack used (prev) :  0000003E
          | + function block  :  00000002
  03      nwk_getMyRxType
          | Stack used (prev) :  0000003E
          | + function block  :  00000002
  05          MRFI_RandomByte
              | Stack used (prev) :  0000003E
              | + function block  :  00000002
  06            BSP_Delay
                | Stack used (prev) :  0000003E
                | + function block  :  00000004
  05          Mrfi_DelayUsec
              | Stack used (prev) :  00000042
              | + function block  :  00000006
  05          Mrfi_DelayUsec
              | Stack used (prev) :  00000042
              | + function block  :  00000006
              |  Already listed
  05          Mrfi_DelayUsec
              | Stack used (prev) :  00000042
              | + function block  :  00000006
              |  Already listed
  06            spiBurstFifoAccess
                | Stack used (prev) :  00000008
                | + function block  :  00000002
                |  Already listed
  05          mrfiSpiWriteTxFifo
              | Stack used (prev) :  0000003E
              | + function block  :  00000002
  06            mrfiSpiCmdStrobe
                | Stack used (prev) :  00000008
                | + function block  :  00000002
                |  Already listed
  06            mrfiSpiCmdStrobe
                | Stack used (prev) :  00000008
                | + function block  :  00000002
                |  Already listed
  06            mrfiSpiCmdStrobe
                | Stack used (prev) :  00000008
                | + function block  :  00000002
                |  Already listed
  05          Mrfi_RxModeOff
              | Stack used (prev) :  0000003E
              | + function block  :  00000002
  06            mrfiSpiCmdStrobe
                | Stack used (prev) :  00000008
                | + function block  :  00000002
                |  Already listed
  05          Mrfi_RxModeOn
              | Stack used (prev) :  0000003E
              | + function block  :  00000002
  06            spiRegAccess
                | Stack used (prev) :  00000008
                | + function block  :  00000002
                |  Already listed
  05          mrfiSpiWriteReg
              | Stack used (prev) :  0000003E
              | + function block  :  00000002
  05          mrfiSpiWriteReg
              | Stack used (prev) :  0000003E
              | + function block  :  00000002
              |  Already listed
  05          mrfiSpiReadReg
              | Stack used (prev) :  0000000A
              | + function block  :  00000002
              |  Already listed
  05          mrfiSpiCmdStrobe
              | Stack used (prev) :  00000008
              | + function block  :  00000002
              |  Already listed
  05          mrfiSpiCmdStrobe
              | Stack used (prev) :  00000008
              | + function block  :  00000002
              |  Already listed
  04        MRFI_Transmit
            | Stack used (prev) :  00000048
            | + function block  :  0000000A
  03      nwk_sendFrame
          | Stack used (prev) :  00000052
          | + function block  :  00000004
  04        memcpy
            | Stack used (prev) :  0000003E
            | + function block  :  00000004
            |  Already listed
  04        nwk_QfindSlot
            | Stack used (prev) :  0000000A
            | + function block  :  0000000A
            |  Already listed
  03      nwk_buildFrame
          | Stack used (prev) :  00000042
          | + function block  :  0000000C
  04        memmove
            | Stack used (prev) :  0000003E
            | + function block  :  00000004
  03      nwk_getNumObjectFromMsg
          | Stack used (prev) :  00000042
          | + function block  :  00000006
  04        memset
            | Stack used (prev) :  00000008
            | + function block  :  00000004
            |  Already listed
  04        memcmp
            | Stack used (prev) :  00000008
            | + function block  :  00000002
            |  Already listed
  03      nwk_allocateLocalRxPort
          | Stack used (prev) :  0000003E
          | + function block  :  0000000E
  04        memcmp
            | Stack used (prev) :  00000008
            | + function block  :  00000002
            |  Already listed
  03      nwk_isLinkDuplicate
          | Stack used (prev) :  0000003E
          | + function block  :  0000000A
  03      nwk_freeConnection
          | Stack used (prev) :  0000003E
          | + function block  :  00000002
  05          map_lid2idx
              | Stack used (prev) :  0000003E
              | + function block  :  00000002
  04        initializeConnection
            | Stack used (prev) :  00000040
            | + function block  :  00000004
  03      nwk_getNextConnection
          | Stack used (prev) :  00000044
          | + function block  :  00000004
  02    smpl_send_link_reply
        | Stack used (prev) :  00000056
        | + function block  :  00000012
  03      memcpy
          | Stack used (prev) :  0000003E
          | + function block  :  00000004
          |  Already listed
  03      nwk_sendFrame
          | Stack used (prev) :  00000052
          | + function block  :  00000004
          |  Already listed
  03      nwk_buildFrame
          | Stack used (prev) :  00000042
          | + function block  :  0000000C
          |  Already listed
  04        memcmp
            | Stack used (prev) :  00000008
            | + function block  :  00000002
            |  Already listed
  03      nwk_findPeer
          | Stack used (prev) :  0000003E
          | + function block  :  0000000A
  03      nwk_freeConnection
          | Stack used (prev) :  0000003E
          | + function block  :  00000002
          |  Already listed
  02    smpl_send_unlink_reply
        | Stack used (prev) :  00000056
        | + function block  :  0000000A
  02    nwk_isValidReply
        | Stack used (prev) :  00000040
        | + function block  :  00000006
        |  Already listed
  02    MRFI_PostKillSem
        | Stack used (prev) :  00000008
        | + function block  :  00000002
        |  Already listed
  01  nwk_processLink
      | Stack used (prev) :  00000068
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000006C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  0000003E
  02    memcmp
        | Stack used (prev) :  00000008
        | + function block  :  00000002
        |  Already listed
  02    nwk_getMyAddress
        | Stack used (prev) :  0000003E
        | + function block  :  00000002
        |  Already listed
  02    nwk_isValidReply
        | Stack used (prev) :  00000040
        | + function block  :  00000006
        |  Already listed
  02    MRFI_PostKillSem
        | Stack used (prev) :  00000008
        | + function block  :  00000002
        |  Already listed
  01  nwk_processMgmt
      | Stack used (prev) :  00000046
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000004A


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  0000003E
  03      memcpy
          | Stack used (prev) :  0000003E
          | + function block  :  00000004
          |  Already listed
  03      nwk_sendFrame
          | Stack used (prev) :  00000052
          | + function block  :  00000004
          |  Already listed
  03      nwk_buildFrame
          | Stack used (prev) :  00000042
          | + function block  :  0000000C
          |  Already listed
  02    smpl_send_ping_reply
        | Stack used (prev) :  00000056
        | + function block  :  00000006
  02    nwk_isValidReply
        | Stack used (prev) :  00000040
        | + function block  :  00000006
        |  Already listed
  02    MRFI_PostKillSem
        | Stack used (prev) :  00000008
        | + function block  :  00000002
        |  Already listed
  01  nwk_processPing
      | Stack used (prev) :  0000005C
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000060


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  0000003E
  01  nwk_processSecurity
      | Stack used (prev) :  0000003E
      | + function block  :  00000002
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000040


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000006C
  01  __low_level_init
      | Stack used (prev) :  0000006C
      | + function block  :  00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  0000006E


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000006E
  03      memcpy
          | Stack used (prev) :  0000003E
          | + function block  :  00000004
          |  Already listed
  03      nwk_getLinkToken
          | Stack used (prev) :  0000006E
          | + function block  :  00000002
  03      nwk_setLinkToken
          | Stack used (prev) :  0000006E
          | + function block  :  00000002
  03      nwk_getJoinToken
          | Stack used (prev) :  0000006E
          | + function block  :  00000002
  03      nwk_setJoinToken
          | Stack used (prev) :  0000006E
          | + function block  :  00000002
  05          map_lid2idx
              | Stack used (prev) :  0000003E
              | + function block  :  00000002
              |  Already listed
  04        nwk_getConnInfo
            | Stack used (prev) :  0000006E
            | + function block  :  00000004
  04        nwk_freeConnection
            | Stack used (prev) :  0000003E
            | + function block  :  00000002
            |  Already listed
  03      nwk_connectionControl
          | Stack used (prev) :  00000072
          | + function block  :  00000002
  04        memcpy
            | Stack used (prev) :  0000003E
            | + function block  :  00000004
            |  Already listed
  04        nwk_sendFrame
            | Stack used (prev) :  00000052
            | + function block  :  00000004
            |  Already listed
  04        nwk_buildFrame
            | Stack used (prev) :  00000042
            | + function block  :  0000000C
            |  Already listed
  03      nwk_rawSend
          | Stack used (prev) :  0000006E
          | + function block  :  00000006
  05          memcpy
              | Stack used (prev) :  0000003E
              | + function block  :  00000004
              |  Already listed
  06            memcmp
                | Stack used (prev) :  00000008
                | + function block  :  00000002
                |  Already listed
  06            nwk_getConnInfo
                | Stack used (prev) :  0000006E
                | + function block  :  00000004
                |  Already listed
  05          nwk_QfindOldest
              | Stack used (prev) :  00000072
              | + function block  :  00000016
  05          nwk_QadjustOrder
              | Stack used (prev) :  00000008
              | + function block  :  00000002
              |  Already listed
  05          nwk_getConnInfo
              | Stack used (prev) :  0000006E
              | + function block  :  00000004
              |  Already listed
  04        nwk_retrieveFrame
            | Stack used (prev) :  00000088
            | + function block  :  00000010
  03      nwk_rawReceive
          | Stack used (prev) :  00000098
          | + function block  :  00000008
  04        memcpy
            | Stack used (prev) :  0000003E
            | + function block  :  00000004
            |  Already listed
  04        nwk_getConnInfo
            | Stack used (prev) :  0000006E
            | + function block  :  00000004
            |  Already listed
  05          Mrfi_RxModeOn
              | Stack used (prev) :  0000003E
              | + function block  :  00000002
              |  Already listed
  04        MRFI_RxOn
            | Stack used (prev) :  0000006E
            | + function block  :  00000002
  06            Mrfi_RxModeOff
                | Stack used (prev) :  0000003E
                | + function block  :  00000002
                |  Already listed
  05          MRFI_RxIdle
              | Stack used (prev) :  0000006E
              | + function block  :  00000002
  05          mrfiSpiCmdStrobe
              | Stack used (prev) :  00000008
              | + function block  :  00000002
              |  Already listed
  04        MRFI_Sleep
            | Stack used (prev) :  00000070
            | + function block  :  00000002
  04        MRFI_RxIdle
            | Stack used (prev) :  0000006E
            | + function block  :  00000002
            |  Already listed
  05          mrfiSpiWriteReg
              | Stack used (prev) :  0000003E
              | + function block  :  00000002
              |  Already listed
  05          mrfiSpiWriteReg
              | Stack used (prev) :  0000003E
              | + function block  :  00000002
              |  Already listed
  05          mrfiSpiWriteReg
              | Stack used (prev) :  0000003E
              | + function block  :  00000002
              |  Already listed
  05          mrfiSpiCmdStrobe
              | Stack used (prev) :  00000008
              | + function block  :  00000002
              |  Already listed
  05          mrfiSpiCmdStrobe
              | Stack used (prev) :  00000008
              | + function block  :  00000002
              |  Already listed
  04        MRFI_WakeUp
            | Stack used (prev) :  0000006E
            | + function block  :  00000002
  05          Mrfi_CalculateRssi
              | Stack used (prev) :  00000008
              | + function block  :  00000002
              |  Already listed
  05          Mrfi_DelayUsec
              | Stack used (prev) :  00000042
              | + function block  :  00000006
              |  Already listed
  05          mrfiSpiReadReg
              | Stack used (prev) :  0000000A
              | + function block  :  00000002
              |  Already listed
  05          mrfiSpiReadReg
              | Stack used (prev) :  0000000A
              | + function block  :  00000002
              |  Already listed
  04        MRFI_Rssi
            | Stack used (prev) :  0000006E
            | + function block  :  00000004
  05          Mrfi_RxModeOff
              | Stack used (prev) :  0000003E
              | + function block  :  00000002
              |  Already listed
  05          Mrfi_RxModeOn
              | Stack used (prev) :  0000003E
              | + function block  :  00000002
              |  Already listed
  05          mrfiSpiWriteReg
              | Stack used (prev) :  0000003E
              | + function block  :  00000002
              |  Already listed
  04        MRFI_SetRFPwr
            | Stack used (prev) :  0000006E
            | + function block  :  00000002
  03      nwk_radioControl
          | Stack used (prev) :  00000072
          | + function block  :  00000006
  04        memcpy
            | Stack used (prev) :  0000003E
            | + function block  :  00000004
            |  Already listed
  05          memcpy
              | Stack used (prev) :  0000003E
              | + function block  :  00000004
              |  Already listed
  04        nwk_setMyAddress
            | Stack used (prev) :  0000006E
            | + function block  :  00000002
  04        nwk_getMyAddress
            | Stack used (prev) :  0000003E
            | + function block  :  00000002
            |  Already listed
  03      nwk_deviceAddress
          | Stack used (prev) :  00000070
          | + function block  :  00000006
  03      nwk_getProtocolVersion
          | Stack used (prev) :  0000003E
          | + function block  :  00000002
          |  Already listed
  03      nwk_getFWVersion
          | Stack used (prev) :  0000006E
          | + function block  :  00000002
  03      nwk_NVObj
          | Stack used (prev) :  0000006E
          | + function block  :  00000002
  02    SMPL_Ioctl
        | Stack used (prev) :  000000A0
        | + function block  :  00000006
  04        memcpy
            | Stack used (prev) :  0000003E
            | + function block  :  00000004
            |  Already listed
  04        nwk_setLinkToken
            | Stack used (prev) :  0000006E
            | + function block  :  00000002
            |  Already listed
  04        nwk_getBCastAddress
            | Stack used (prev) :  0000006E
            | + function block  :  00000002
  05          memcpy
              | Stack used (prev) :  0000003E
              | + function block  :  00000004
              |  Already listed
  04        nwk_setAPAddress
            | Stack used (prev) :  0000006E
            | + function block  :  00000002
  04        nwk_getProtocolVersion
            | Stack used (prev) :  0000003E
            | + function block  :  00000002
            |  Already listed
  04        SMPL_Ioctl
            | Stack used (prev) :  000000A0
            | + function block  :  00000006
            |  Already listed
  05          memmove
              | Stack used (prev) :  0000003E
              | + function block  :  00000004
              |  Already listed
  04        nwk_putNumObjectIntoMsg
            | Stack used (prev) :  0000006E
            | + function block  :  00000008
  04        MRFI_RxOn
            | Stack used (prev) :  0000006E
            | + function block  :  00000002
            |  Already listed
  04        MRFI_Sleep
            | Stack used (prev) :  00000070
            | + function block  :  00000002
            |  Already listed
  04        MRFI_RxIdle
            | Stack used (prev) :  0000006E
            | + function block  :  00000002
            |  Already listed
  04        MRFI_WakeUp
            | Stack used (prev) :  0000006E
            | + function block  :  00000002
            |  Already listed
  05          BSP_Delay
              | Stack used (prev) :  0000003E
              | + function block  :  00000004
              |  Already listed
  04        MRFI_ReplyDelay
            | Stack used (prev) :  0000006E
            | + function block  :  00000008
  04        MRFI_GetRadioState
            | Stack used (prev) :  0000006E
            | + function block  :  00000002
  03      nwk_join
          | Stack used (prev) :  000000A6
          | + function block  :  00000022
  03      nwk_getMyAddress
          | Stack used (prev) :  0000003E
          | + function block  :  00000002
          |  Already listed
  04        memset
            | Stack used (prev) :  00000008
            | + function block  :  00000004
            |  Already listed
  04        memcpy
            | Stack used (prev) :  0000003E
            | + function block  :  00000004
            |  Already listed
  04        nwk_securityInit
            | Stack used (prev) :  0000006E
            | + function block  :  00000002
  05          MRFI_RandomByte
              | Stack used (prev) :  0000003E
              | + function block  :  00000002
              |  Already listed
  04        nwk_pingInit
            | Stack used (prev) :  0000006E
            | + function block  :  00000002
  05          MRFI_RandomByte
              | Stack used (prev) :  0000003E
              | + function block  :  00000002
              |  Already listed
  04        nwk_mgmtInit
            | Stack used (prev) :  0000006E
            | + function block  :  00000002
  05          memset
              | Stack used (prev) :  00000008
              | + function block  :  00000004
              |  Already listed
  05          MRFI_RandomByte
              | Stack used (prev) :  0000003E
              | + function block  :  00000002
              |  Already listed
  04        nwk_linkInit
            | Stack used (prev) :  0000006E
            | + function block  :  00000002
  05          MRFI_RandomByte
              | Stack used (prev) :  0000003E
              | + function block  :  00000002
              |  Already listed
  04        nwk_joinInit
            | Stack used (prev) :  0000006E
            | + function block  :  00000002
  04        nwk_getBCastAddress
            | Stack used (prev) :  0000006E
            | + function block  :  00000002
            |  Already listed
  05          memset
              | Stack used (prev) :  00000008
              | + function block  :  00000004
              |  Already listed
  05          memcpy
              | Stack used (prev) :  0000003E
              | + function block  :  00000004
              |  Already listed
  04        nwk_globalsInit
            | Stack used (prev) :  0000006E
            | + function block  :  00000002
  04        nwk_freqInit
            | Stack used (prev) :  0000006E
            | + function block  :  00000002
  05          nwk_getMyAddress
              | Stack used (prev) :  0000003E
              | + function block  :  00000002
              |  Already listed
  05          MRFI_RandomByte
              | Stack used (prev) :  0000003E
              | + function block  :  00000002
              |  Already listed
  04        nwk_frameInit
            | Stack used (prev) :  0000006E
            | + function block  :  00000002
  05          memset
              | Stack used (prev) :  00000008
              | + function block  :  00000004
              |  Already listed
  04        nwk_QInit
            | Stack used (prev) :  0000006E
            | + function block  :  00000002
  03      nwk_nwkInit
          | Stack used (prev) :  00000070
          | + function block  :  00000004
  04        memset
            | Stack used (prev) :  00000008
            | + function block  :  00000004
            |  Already listed
  04        Mrfi_DelayUsec
            | Stack used (prev) :  00000042
            | + function block  :  00000006
            |  Already listed
  04        Mrfi_DelayUsec
            | Stack used (prev) :  00000042
            | + function block  :  00000006
            |  Already listed
  04        Mrfi_DelayUsec
            | Stack used (prev) :  00000042
            | + function block  :  00000006
            |  Already listed
  04        mrfiSpiInit
            | Stack used (prev) :  0000006E
            | + function block  :  00000002
  05          Mrfi_RxModeOff
              | Stack used (prev) :  0000003E
              | + function block  :  00000002
              |  Already listed
  05          Mrfi_RxModeOn
              | Stack used (prev) :  0000003E
              | + function block  :  00000002
              |  Already listed
  05          mrfiSpiWriteReg
              | Stack used (prev) :  0000003E
              | + function block  :  00000002
              |  Already listed
  04        MRFI_SetLogicalChannel
            | Stack used (prev) :  0000006E
            | + function block  :  00000002
  04        MRFI_SetRFPwr
            | Stack used (prev) :  0000006E
            | + function block  :  00000002
            |  Already listed
  04        Mrfi_RxModeOff
            | Stack used (prev) :  0000003E
            | + function block  :  00000002
            |  Already listed
  04        mrfiSpiWriteReg
            | Stack used (prev) :  0000003E
            | + function block  :  00000002
            |  Already listed
  04        mrfiSpiWriteReg
            | Stack used (prev) :  0000003E
            | + function block  :  00000002
            |  Already listed
  04        mrfiSpiWriteReg
            | Stack used (prev) :  0000003E
            | + function block  :  00000002
            |  Already listed
  04        mrfiSpiReadReg
            | Stack used (prev) :  0000000A
            | + function block  :  00000002
            |  Already listed
  04        mrfiSpiReadReg
            | Stack used (prev) :  0000000A
            | + function block  :  00000002
            |  Already listed
  04        mrfiSpiReadReg
            | Stack used (prev) :  0000000A
            | + function block  :  00000002
            |  Already listed
  04        mrfiSpiCmdStrobe
            | Stack used (prev) :  00000008
            | + function block  :  00000002
            |  Already listed
  03      MRFI_Init
          | Stack used (prev) :  00000070
          | + function block  :  00000006
  03      MRFI_WakeUp
          | Stack used (prev) :  0000006E
          | + function block  :  00000002
          |  Already listed
  04        mrfiSpiWriteReg
            | Stack used (prev) :  0000003E
            | + function block  :  00000002
            |  Already listed
  03      MRFI_SetRxAddrFilter
          | Stack used (prev) :  0000006E
          | + function block  :  00000002
  04        mrfiSpiWriteReg
            | Stack used (prev) :  0000003E
            | + function block  :  00000002
            |  Already listed
  03      MRFI_EnableRxAddrFilter
          | Stack used (prev) :  0000006E
          | + function block  :  00000002
  02    SMPL_Init
        | Stack used (prev) :  000000C8
        | + function block  :  00000004
  02    createRandomAddress
        | Stack used (prev) :  0000006E
        | + function block  :  00000004
  03      SMPL_Ioctl
          | Stack used (prev) :  000000A0
          | + function block  :  00000006
          |  Already listed
  05          memcpy
              | Stack used (prev) :  0000003E
              | + function block  :  00000004
              |  Already listed
  05          nwk_getBCastAddress
              | Stack used (prev) :  0000006E
              | + function block  :  00000002
              |  Already listed
  05          nwk_getProtocolVersion
              | Stack used (prev) :  0000003E
              | + function block  :  00000002
              |  Already listed
  05          nwk_getMyRxType
              | Stack used (prev) :  0000003E
              | + function block  :  00000002
              |  Already listed
  05          SMPL_Ioctl
              | Stack used (prev) :  000000A0
              | + function block  :  00000006
              |  Already listed
  05          nwk_putNumObjectIntoMsg
              | Stack used (prev) :  0000006E
              | + function block  :  00000008
              |  Already listed
  05          nwk_allocateLocalRxPort
              | Stack used (prev) :  0000003E
              | + function block  :  0000000E
              |  Already listed
  05          nwk_freeConnection
              | Stack used (prev) :  0000003E
              | + function block  :  00000002
              |  Already listed
  05          nwk_getNextConnection
              | Stack used (prev) :  00000044
              | + function block  :  00000004
              |  Already listed
  05          MRFI_RxOn
              | Stack used (prev) :  0000006E
              | + function block  :  00000002
              |  Already listed
  05          MRFI_Sleep
              | Stack used (prev) :  00000070
              | + function block  :  00000002
              |  Already listed
  05          MRFI_RxIdle
              | Stack used (prev) :  0000006E
              | + function block  :  00000002
              |  Already listed
  05          MRFI_WakeUp
              | Stack used (prev) :  0000006E
              | + function block  :  00000002
              |  Already listed
  05          MRFI_ReplyDelay
              | Stack used (prev) :  0000006E
              | + function block  :  00000008
              |  Already listed
  05          MRFI_GetRadioState
              | Stack used (prev) :  0000006E
              | + function block  :  00000002
              |  Already listed
  04        nwk_link
            | Stack used (prev) :  000000A6
            | + function block  :  00000022
  03      SMPL_Link
          | Stack used (prev) :  000000C8
          | + function block  :  00000002
  04        memcpy
            | Stack used (prev) :  0000003E
            | + function block  :  00000004
            |  Already listed
  04        nwk_sendFrame
            | Stack used (prev) :  00000052
            | + function block  :  00000004
            |  Already listed
  04        nwk_buildFrame
            | Stack used (prev) :  00000042
            | + function block  :  0000000C
            |  Already listed
  04        nwk_checkConnInfo
            | Stack used (prev) :  0000006E
            | + function block  :  00000002
  04        nwk_getConnInfo
            | Stack used (prev) :  0000006E
            | + function block  :  00000004
            |  Already listed
  04        MRFI_GetRadioState
            | Stack used (prev) :  0000006E
            | + function block  :  00000002
            |  Already listed
  03      SMPL_SendOpt
          | Stack used (prev) :  00000072
          | + function block  :  0000000C
  02    linkTo
        | Stack used (prev) :  000000CA
        | + function block  :  0000001C
  03      BSP_InitButtons
          | Stack used (prev) :  0000006E
          | + function block  :  00000002
  03      BSP_InitLeds
          | Stack used (prev) :  0000006E
          | + function block  :  00000002
  03      BSP_InitBoard
          | Stack used (prev) :  0000006E
          | + function block  :  00000002
  02    BSP_Init
        | Stack used (prev) :  00000070
        | + function block  :  00000004
  01  main
      | Stack used (prev) :  000000E6
      | + function block  :  00000006
  <-Sub-tree of type: Function tree
    | Stack used          :  000000EC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000000EC
  01  exit
      | Stack used (prev) :  000000EC
      | + function block  :  00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  000000EE


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000000EE
  01  __data16_memzero
      | Stack used (prev) :  000000EE
      | + function block  :  00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  000000F0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000000F0
  02    memcpy
        | Stack used (prev) :  0000003E
        | + function block  :  00000004
        |  Already listed
  01  __data16_memcpy
      | Stack used (prev) :  000000F0
      | + function block  :  00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  000000F2




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
DATA16_AN                              0001 - 0001               1   rel    0
                                       0003 - 0003               1 
                                       0018 - 001B               4 
                                       0021 - 0022               2 
                                       0027 - 0028               2 
                                       002A - 002E               5 
                                       004A - 004A               1 
                                       0053 - 0053               1 
                                       0056 - 0057               2 
                                       0061 - 0064               4 
                                       0066 - 006B               6 
                                       006E - 006F               2 
                                       0120 - 0121               2 
                                       0128 - 012D               6 
                                       0160 - 0163               4 
                                       0172 - 0173               2 
                                       01B0 - 01B5               6 
DATA16_I                               0200 - 022C              2D   rel    1
DATA16_Z                               022E - 02DD              B0   rel    1
CSTACK                                 0538 - 05FF              C8   rel    1
DATA16_AN                              10FC - 10FF               4   rel    0
DATA16_C                               8000 - 805B              5C   rel    1
DATA16_ID                              805C - 8088              2D   rel    1
CSTART                                 808A - 80B9              30   rel    1
<CODE> 1                               80BA - A093            1FDA   rel    1
INTVEC                                 FFE0 - FFF3              14   com    1
RESET                                  FFFE - FFFF               2   rel    1

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 8 224 bytes of CODE  memory
   421 bytes of DATA  memory (+ 55 absolute )
   137 bytes of CONST memory

Errors: none
Warnings: none

